---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.ALAnyState:any_state.yml
  - defense_logic.yml
---
metadata:
  title: |
    Eviction Helper
  short title: |
    Eviction Help
  tags:
    - HO-02-00-00-00
  authors:
    - Quinten Steenhuis
    - Toby Fey
    - Ian Eisaman
---
mandatory: True
comment: |
  Global interview metadata
variable name: interview_metadata["eviction_defender"]
data:
  al_weaver_version: "1.7.0"
  generated on: "2022-09-08"
  title: >-
    Eviction Helper
  short title: >-
    Eviction Help
  description: |-
    Helps with Evictions
  original_form: >-
    
  allowed courts: 
    - "Missouri"
  categories:
    - "HO-00-00-00-00"
  typical role: "defendant"
  generate download screen: True
---
code: |
  interview_metadata['main_interview_key'] =  'eviction_defender'
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "MO"
---
code: |
  github_repo_name =  'docassemble-MOHUDEvictionProject'
---
code: |
  interview_short_title = "Eviction Defender"
---
code: |
  al_form_type = "existing_case" 
---
code: |
  AL_ORGANIZATION_TITLE = "Legal Services of Eastern Missouri"
---
code: |
  user_started_case = False
---
code: |
  landlord_doc_name = "Plaintiff"
---
code: |
  tenant_doc_name = "Defendant"
---
objects:
  - other_parties: ALPeopleList.using(there_are_any=True,complete_attribute="complete")
  - other_parties[i].attorney: ALPeopleList.using(complete_attribute="complete")
  - users: ALPeopleList.using(there_are_any=True)
---
code: |
  other_parties[i].address.address
  other_parties[i].attorney.gather()
  other_parties[i].complete = True
---
code: |
  other_parties[i].attorney[j].address.address
  other_parties[i].attorney[j].complete = True
---
code: |
  other_parties[i].attorney.there_is_another = False
---
id: any other opposing parties
question: |
  Is there any other **Plaintiff** in this matter?
subquestion:  |
  Additional Plaintiffs may be listed under the first Plaintiff.

fields:
  - no label: other_parties.there_is_another
    datatype: yesnoradio
---
sections:
  - review_eviction_motion_to_continue: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_eviction_motion_to_continue
code: |
  # Set the allowed courts for this interview
  allowed_courts = interview_metadata["eviction_defender"]["allowed courts"]
  nav.set_section('review_eviction_defender')
  user_role = 'defendant'
  landlord_doc_name
  tenant_doc_name
  users[0].name.first
  users[0].address.address
  users[0].address.geocode()
  if received_summons and method_of_summons_service == "posting":
    posting_warning
  docket_number
  filing_date
  section_order
  if docket_available:
    docket_review
  defense_logic
  set_progress(50)
  interview_order_eviction_defender = True
---
code: |
  landlord_information_section
  users.gather()
  rent_payment_section
  lease_section
  landlord_agreement_section
  landlord_problems_section
  section_order = True
---  
code: |
  for party in other_parties:
    party.address.address
    party.attorney.gather()
  is_rent_subsidized
  if previous_landlord_sold_property:
    notice_of_sale_provided
  if landlord_foreclosed:
    notice_of_foreclosure
  landlord_information_section = True
---
code: |
  if not lease_attached:
    petition_states_terms_of_lease
  if len(false_promises):
    relied_on_false_promises
  unfair_duress
  lease_section = True
---
code: |
  petition_states_rent_amount
  petition_states_rent_periods
  was_rent_paid
  if offer_attempt:
    was_attempt_full
    if has_refused_payment:
      has_attempt_evidence
  if is_rent_subsidized:
    excessive_rent
  if late_fees_assessed:
    late_fees_penalty
    if trial_court_circuit == "21":
      petition_separates_nonrent
  rent_payment_section = True
---
code: |
  if landlord_agreement:
    tenant_compliance_with_agreement
  landlord_agreement_section = True
---
code: |
  warranty_breaches
  cqe_breaches
  landlord_problems_section = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  eviction_defender_intro
  interview_order_eviction_defender
  signature_date
  # Store anonymous data for analytics / statistics
  store_variables_snapshot(
      persistent=True,
      data={
          "zip": showifdef("users[0].address.zip"),
          "reached_interview_end": True,
      },
  )
  eviction_defender_download
---
id: basic questions intro screen
decoration: form-lineal
question: |
  Missouri ${interview_short_title}
subquestion: |
  Missouri ${interview_short_title} can help you complete and download forms  in 3 steps:

  
  Step 1. Answer questions that will fill in your form for you.  
  Step 2. Preview the completed form.  
  % if form_approved_for_email_filing:  
  Step 3. Email the form to the court using this secure website and save copies
  for yourself for later reference.  
  % elif al_form_type in ['starts_case','existing_case','appeal']:
  Step 3. Download and print the final form. You will need to deliver it
  to the court on your own.
  % else:
  Step 3. Download and print the final form. You will need to deliver it 
  on your own.
  % endif
  
  This site is not a lawyer. If you would like a lawyer, find [a Missouri legal aid provider](https://www.lsmo.org/).  If you are outside Missouri, find your [your local
  legal aid provider](https://www.lsc.gov/what-legal-aid/find-legal-aid).
  
  Tap the {green words} in any screen for a definition or more information.
  
  % if chat_partners_available().help:
  Live help is currently available in this interview. Click the speech bubble
  (:comment-alt:) in the navigation bar to connect to a live advocate for help.
  % endif
fields:
  - To continue, you must accept our [terms of use](${ AL_ORGANIZATION_HOMEPAGE }/privacy/): acknowledged_information_use
    datatype: checkboxes
    none of the above: False    
    minlength: 1
    choices:
      - I accept the terms of use.
    validation messages:
      minlength: |
        You cannot continue unless you agree to the terms of use.        
continue button field: al_intro_screen
terms:
  green words: |
    Green words are legal terms or a short way of referring to something that needs more explanation. The definition or explanation pops up when you tap the green words. 
---
comment: |
  This question is used to introduce your interview. Please customize
id: eviction_defender_introduction
continue button field: eviction_defender_intro
question: |
  Eviction Defender
subquestion: |
  This interview can help you win your eviction case.
  
  Answering these questions will produce an eviction Answer and motions that you may need.  The interview will also provide a list of next steps you can take, including how to deliver the paperwork on your own.
  
  **This interview will not file or deliver any paperwork for you.  You must print and deliver or file the paperwork on your own.**
  
  Before you start this interview, you may want to gather these documents.
  
   - The Summons from the Court and the Landlord's Petition
   - Any Eviction Notice That You Received
   - Your Lease
---
id: your address
sets:
  - users[0].address.address
  - users[0].address.city
  - users[0].address.zip
  - users[0].address.unit
  - users[0].address.state
  - users[0].address.country
question: |
  Where do you live?
subquestion: |
  List the address that you are being evicted from.
fields:
  - code: |
      users[0].address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE)
---
###################### DOCKET REVIEW ######################
id: Docket_introduction
question: |
  Finding Your Case on the Online Docket
subquestion: |
  You can find your case on the Missouri **Online Docket**, 
  also known as [Case.net](https://www.courts.mo.gov/cnet).

  Using the Online Docket lets you check on upcoming hearings.
  
  **Do you want a guide through using the online docket?**
yesno: docket_available
---
code: |
  docket_header
  for party in other_parties:
    party.address.address
    party.attorney.gather()
  users.gather()
  past_hearings
  original_hearing_date
  set_parts(subtitle=str(users))
  docket_review_conclusion
  docket_review = True
comment: |
  filing_date
  original_hearing_date
  other_parties[0].address.address
  service_methods
  trial_court.address.address
  users.gather()
  set_parts(subtitle=str(users))
  docket_number
  is_rent_sought
  docket_review = True
---
id: Information about the original hearing
question: |
  Information about the original hearing
fields:
  - "Date of original hearing": original_hearing_date
    datatype: date
  - "Original hearing time": original_hearing_time
---
id: Calculating if hearing date is past
code: |
  original_hearing_date_past = original_hearing_date < today()
---
id: Service to other parties
question: |
  Service to ${ other_parties }
fields:
  - "Service methods": service_methods
    datatype: checkboxes
    choices:
      - E-filing: e_file
      - Mail: us_mail
      - Email: e_mail
      - Fax: delivery_fax
      - Hand delivery: hand_delivery
  - "Date of Service": service_date
    datatype: date
---
question:  Where is the Court?
fields:
  - Is the court in the City of St. Louis?: in_st_louis
    datatype: yesnoradio
  - What county is the court in?: trial_court_county
    datatype: combobox
    code: |
      county_to_circuit.keys()
    show if:
      variable: in_st_louis
      is: False
  
---
only sets: trial_court_name_default
code: |
  if users[0].address.city == "St. Louis":
    trial_court_circuit = 22
    trial_court_county = "City of St. Louis"
    trial_court_name_default = "22nd Judicial Circuit – City of St. Louis"
  else:
    trial_court_circuit = county_to_circuit[users[0].address.county]
    trial_court_county = users[0].address.county
    trial_court_name_default = ordinal_number(trial_court_circuit, use_word=False).capitalize() + " Judicial Circuit - " + users[0].address.county
---
code: |
  trial_court.circuit = ordinal_number(trial_court_circuit, use_word=False)
  trial_court.address.county = trial_court_county
---
code: |
  trial_court.division = "Housing Division"
---
code: |
  county_to_circuit = {
    "Adair County":2,
    "Andrew County":5,
    "Atchison County":4,
    "Audrain County":12,
    "Barry County":39,
    "Barton County":28,
    "Bates County":27,
    "Benton County":30,
    "Bollinger County":32,
    "Boone County":13,
    "Buchanan County":5,
    "Butler County":36,
    "Caldwell County":43,
    "Callaway County":13,
    "Camden County":26,
    "Cape Girardeau County":32,
    "Carroll County":8,
    "Carter County":37,
    "Cass County":17,
    "Cedar County":28,
    "Chariton County":9,
    "Christian County":38,
    "City of St. Louis":22,
    "Clark County":1,
    "Clay County":7,
    "Clinton County":43,
    "Cole County":19,
    "Cooper County":18,
    "Crawford County":42,
    "Dade County":28,
    "Dallas County":30,
    "Daviess County":43,
    "DeKalb County":43,
    "Dent County":42,
    "Douglas County":44,
    "Dunklin County":35,
    "Franklin County":20,
    "Gasconade County":20,
    "Gentry County":4,
    "Greene County":31,
    "Grundy County":3,
    "Harrison County":3,
    "Henry County":27,
    "Hickory County":30,
    "Holt County":4,
    "Howard County":14,
    "Howell County":37,
    "Iron County":42,
    "Jackson County":16,
    "Jasper County":29,
    "Jefferson County":23,
    "Johnson County":17,
    "Knox County":2,
    "Laclede County":26,
    "Lafayette County":15,
    "Lawrence County":39,
    "Lewis County":2,
    "Lincoln County":45,
    "Linn County":9,
    "Livingston County":43,
    "Macon County":41,
    "Madison County":24,
    "Maries County":25,
    "Marion County":10,
    "McDonald County":40,
    "Mercer County":3,
    "Miller County":26,
    "Mississippi County":33,
    "Moniteau County":26,
    "Monroe County":10,
    "Montgomery County":12,
    "Morgan County":26,
    "New Madrid County":34,
    "Newton County":40,
    "Nodaway County":4,
    "Oregon County":37,
    "Osage County":20,
    "Ozark County":44,
    "Pemiscot County":34,
    "Perry County":32,
    "Pettis County":18,
    "Phelps County":25,
    "Pike County":45,
    "Platte County":6,
    "Polk County":30,
    "Pulaski County":25,
    "Putnam County":3,
    "Ralls County":10,
    "Randolph County":14,
    "Ray County":8,
    "Reynolds County":42,
    "Ripley County":36,
    "Saint Francois County":24,
    "Sainte Genevieve County":24,
    "Saline County":15,
    "Schuyler County":1,
    "Scotland County":1,
    "Scott County":33,
    "Shannon County":37,
    "Shelby County":41,
    "St. Charles County":11,
    "St. Clair County":27,
    "St. Louis County":21,
    "Stoddard County":35,
    "Stone County":39,
    "Sullivan County":9,
    "Taney County":46,
    "Texas County":25,
    "Vernon County":28,
    "Warren County":12,
    "Washington County":24,
    "Wayne County":42,
    "Webster County":30,
    "Worth County":4,
    "Wright County":44,}
---
sets:
  - other_parties[i].name.first
  - other_parties[i].name.last
  - other_parties[i].name.middle
  - other_parties[i].name.suffix
id: names of opposing parties
question: |
  Name of ${ ordinal(i) } landlord
fields:
  - code: |
      other_parties[i].name_fields(person_or_business='unsure')
---
if: docket_available
sets:
  - other_parties[i].name.first
  - other_parties[i].name.last
  - other_parties[i].name.middle
  - other_parties[i].name.suffix
id: names of opposing parties
question: |
  Name of ${ ordinal(i) } Plaintiff
subquestion: |
    You can click on "Parties & Attorneys", the next tab to the right.  This tab should look like this:
  
    [FILE Parties.png, 100%]
    
    Who is listed as the Plaintiff?
fields:
  - code: |
      other_parties[i].name_fields(person_or_business='unsure')
---
question: Docket Entries
subquestion: |
  You can click on the Docket Entries to see a list of everything that has happened in the case, including when the Plaintiff filed the petition and any hearings.  On the left side will be a date, and the right side will have any
  
  If the only thing that has happened so far is that the Plaintiff filed the Petition, the docket will look like this:
  
  [FILE Docket.png, 100%]
  
  If there have been any hearings, that will be listed with a separate date and information about that hearing.
fields:
  - Have there been any hearings: past_hearings
    datatype: yesnomaybe
---
if: docket_available
question: Next Hearing
subquestion: |
  You can find the information about the next hearing on the Docket Review page, but you can also click to Scheduled Hearings & Trials to find this information more easily.
  
  [FILE ScheduledEvents.png, 100%]
fields:
  - "Date of original hearing": original_hearing_date
    datatype: date
  - "Original hearing time": original_hearing_time
---
question: Other information on Case.Net
subquestion: |
  Some of the other information on Case.Net will not be applicable to your eviction case, like "Charges, Judgments, & Sentences", and other tabs will only be useful after the eviction case is over, like "Civil Judgments" and "Garnishments/Execution".
  
  You can keep checking Case.Net regularly to make sure you aren't missing anything happening in your case.  
  
  You can also sign up for to get notifications of any updates to the docket.
continue button field: docket_review_conclusion
---
---
sets: docket_number
id: docket number
question: |
  What is the docket number for your case?
fields:
  - I don't know the docket number: dont_know_docket_number
    datatype: yesnowide
  - no label: docket_number
    hide if: dont_know_docket_number
validation code: |
  # This should be safe to 
  if dont_know_docket_number:
    docket_number = ''      
---
###################### PETITION REVIEW ######################
id: Petition_introduction
mandatory: True
question: |
  Did you receive the Summons and Petition?
subquestion: |
  An eviction case must start with a Summons from the Court, with an attached Landlord's Petition.
  
  The Landlord's Petition may generally look like this Form Petition.
  
  [FILE ComplaintForm.png]

fields:
  - "Did you receive a copy of the Summons and Landlord's Petition?": received_summons
    datatype: yesnomaybe
  - "How did you receive the Summons and Landlord's Petition?": method_of_summons_service
    datatype: radio
    choices:
      - "By mail": mail
      - "Posting": posting
    show if:
      variable: received_summons
      is: True
  - "Do you have a copy of the Landlord's Petition available?": petition_available
    datatype: yesnoradio
  - note: |
      Having the Landlord's Petition available will make it easier to answer the following questions.
---
question: WARNING
subquestion: |
  Please note that you have been served by posting. This means that all that your landlord can receive from this court action is possession of the home in question. 
  
  However, if you proceed to file any of the documents you may receive from this interview you could be subjecting yourself to a monetary judgement. This means that you could receive a judgement stating that you owe money when originally you would not have. 
  
  You are welcome to continue should you choose to do so, or you may stop the process now and contact your local Legal Services provider for more details.
continue button field: posting_warning
---
code: |
  docket_number
  filing_date
  for party in other_parties:
    party.address.address
    party.attorney.gather()
  users.gather()
  petition_states_rent_amount
  petition_states_terms_of_lease
  petition_states_rent_periods
  petition_states_demand_made
  lease_attached
  petition_review = True
comment: |
  filing_date
  is_rent_sought
  petition_requirements
  petition_review = True
---
id: caption - docket number and file date
if: petition_available
question: Finding Basic Information about Your Case
subquestion: |
  You can find important basic information at the the top of the Landlord's Petition, like the name of the court, the case number, and the date the landlord filed the petition in court.
  
  [FILE ComplaintCaptionCourt.png, 100%]

  
fields:
  - Court: trial_court_name
    default: ${ trial_court_name_default }
  - Case Number: docket_number
  - note: |
      The Filing Date will usually be on a stamp or a sticker.
  - Date File Stamp: filing_date
    datatype: date
---
id: names of opposing parties - petition
if: petition_available
question: Landlord's Name
subquestion: |
  Your landlord is called the Plaintiff in an eviction case, and the Plaintiff's name and address is near the top of the Caption on the left.
  
  [FILE ComplaintCaptionPlaintiff.png, 100%]
  
  Who is the ${ ordinal(i) } Plaintiff listed?
sets:
  - other_parties[i].name.first
  - other_parties[i].name.last
  - other_parties[i].name.middle
  - other_parties[i].name.suffix
fields:
  - code: |
      other_parties[i].name_fields(person_or_business='unsure')
--- 
id: petition requirements - rent amount
question: How much rent does your landlord say that you owe?
subquestion: |
  The Landlord's Petition must say how much is owed at the time the Landlord filed the petition.
  
  A Landlord's Petition may say something like this about the rent amount, but it may also have different language:
  
  [FILE ComplaintRentAmount.png, 100%]
fields:
  - "How much does the Landlord's Petition say that you owe **in rent**?": rent_amount_owed
    datatype: currency
    hide if:
      variable: petition_states_rent_amount
      is: True
  - "It does not say an amount": petition_states_rent_amount
    datatype: yesnowide
    default: False
  - "Is there any charge on the Landlord's Petition for something other than rent?": other_charges_alleged
    datatype: yesnomaybe
  - note: |
      Other charges may include a pet fee, cleaning fee, fee for repairs.
---
question: Does the petition separate the amount you owe in rent from other charges?
fields:
  - Are rent charges separated from other charges: petition_separates_nonrent
    datatype: yesnomaybe
---
code: |
  if petition_states_rent_amount:
    petition_alleges_nonrent = False
  else:
    petition_alleges_nonrent = True
---
id: petition requirements - terms of lease
question: Is the lease attached to the petition?
subquestion: |
  The Landlord's Petition must either: 
  
   1. attach a copy of the lease, or
   2. say what you and the landlord agreed to in the rental agreement, such as the amount of rent and other information.
   
  That part of the Landlord's Petition may look like this, but can have different language:
  
  [FILE ComplaintTerms.png, 100%]
fields:
  - "Is the lease attached to the Landlord's Petition?": lease_attached
    datatype: yesnomaybe
  - "Does the Landlord's Petition say what you and the landlord agreed to in the rental agreement?": petition_states_terms_of_lease
    datatype: yesnomaybe
    show if: 
      variable: lease_attached
      is: False
---
id: petition requirements - periods due
question: Does the petition list each month that the landlord claims you owe rent?
subquestion: |
  The Landlord's Petition must say what months you allegedly owe rent for.
 
fields:
  - "Does the Landlord's Petition say the rental periods owed?": petition_states_rent_periods
    datatype: yesnomaybe
---
id: petition requirements - demand
question: Does the Petition say that the landlord demanded rent?
subquestion: |
  The Landlord's Petition must say that the "landlord demanded rent", meaning that the landlord told you that you had to pay rent or leave.
  
  The Demand may look like this, but can have different language:
  
  [FILE ComplaintDemand.png, 100%]
 
fields:
  - "Does the Landlord's Petition say the landlord demanded rent?": petition_states_demand_made
    datatype: yesnomaybe
---
id: when was lawsuit filed
comment: |
  DOCKET
  (PETITION)
question: |
  When was the lawsuit filed?
help: 
  label: |
    How do I find this?
  content: |
    This information can be found on the **Docket** or the **Petition**
    
    (TODO: Insert information to help user locate this information on the Docket and Petition)
fields:
  - Filing date: filing_date
    datatype: date
---
id: is seeking past due rent true
comment: |
  DOCKET
  (PETITION)
question: |
  Is the landlord seeking recovery of past-due rent?
help:
  label: |
    How do I find this?
  content: |
    This information can be found on the **Docket** or the **Petition**.
    
    (TODO: Insert information to help user locate this information on the Docket and Petition)
fields:
  - "": is_rent_sought
    datatype: yesno
    input type: yesnoradio
---
id: has refused payment
comment: |
  ADDITIONAL
  (TODO: support multiple refusal dates)
  (TODO: implement Other explanation)
  (TODO: change was_attempt_full question options from Yes/No to Full/Partial)
question: |
  Has the landlord refused rent?
fields:
  - Did you offer to pay the rent your landlord says you owe?: offer_attempt
    datatype: yesnoradio
  - HOW did you attempt payment?: attempt_method
    input type: radio
    choices:
      - via Letter
      - via Email
      - verbally In person
      - verbally Over Phone Call
      - Other
    show if:
      variable: offer_attempt
      is: True
  - WHEN did you attempt payment?: attempt_date
    datatype: date
    show if:
      variable: offer_attempt
      is: True
  - Did you attempt to pay in full?: was_attempt_full
    datatype: yesno
    input type: yesnoradio
    show if:
      variable: offer_attempt
      is: True
  - Did the landlord refuse this payment?: has_refused_payment
    datatype: yesno
    input type: yesnoradio
    show if:
      variable: offer_attempt
      is: True
---
question: Do you have proof of the landlord's refusal of rent?
subquestion: |
  For example, a letter from the landlord refusing to accept the money, a written check or money order, or a witness to the landlord's refusal.
fields:
  - Have Proof?: has_attempt_evidence
    datatype: yesno
    input type: yesnoradio
  - Would you be willing to offer to pay the full amount of past-due rent plus court costs in exchange for dismissing this case?: will_offer_payment
    datatype: yesno
    input type: yesnoradio
    help: |
      (TODO: add explanation as to why user may want to do this)
---
id: warranty of habitability
question: |
  Are there problems in your home that need to be repaired?
subquestion: |
  You may have a claim of **Breach of Warranty of Habitability** if the condition of your home affected your life, health or safety and made the dwelling uninhabitable in whole or in part.
  
  You can list problems that have been fixed if they happened with the last 2 years.
  
  Winning on a Breach of Warranty of Habitability claim may excuse you from all or part of the back rent owed.
fields: 
  - Do any of the following apply to you?: warranty_breaches
    datatype: checkboxes
    choices: 
      - Has windows and/or doors that are not lockable, or Tenant cannot lock them: is_not_lockable
      - Is infested with bugs or vermin through no fault of the Defendant: is_infested
      - Has inadequate or no heating, cooling, light, or electricity: is_inadequate
      - Has electrical problems that render the home unsafe: has_electrical_problems
      - Has plumbing not in working order or is subject to flooding: has_plumbing_problems
      - Has standing water or sewage: has_standing_water
      - Has dangerous structural issues: has_structural_issues
      - Other: other
  - What other problems do you have?: other_warrranty_breaches
    show if:
      variable: warranty_breaches['other']
      is: True
---
id: covenant of quiet enjoyment
question: |
  Covenant of quiet enjoyment
subquestion: |
  You may have a claim of **Breach of Covenant of Quiet Enjoyment** if your landlord is responsible for a substantial disruption in the use and quiet enjoyment of the rental property.
  
  Winning on a Breach of Covenant of Quiet Enjoyment claim may excuse you from all or part of the back rent owed.
fields: 
  - Do any of the following apply to you?: cqe_breaches
    datatype: checkboxes
    choices:
      - Repeated harassment by the landlord in person or on the phone: harassment
      - Frequent or unecessary visits or inspections of the property: visits
      - Unnecessary remodeling work, or maintenance work that takes longer than initially proposed: remodeling
      - Construction that blocks your access to the property or forces you to take a lengthy detour: access
      - Constantly barking dog or other animal owned by the landlord: animal
      - Vermin or pests in the walls making disruptive noises: vermin
      - Other: other
---
id: preview eviction_defender
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_eviction_defender'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: eviction_defender_preview_question    
---
code: |
  signature_fields = []
---
code: |
  # This is a placeholder for the addresses that will be searched
  # for matching address to court. Edit if court venue is based on 
  # a different address than the user's
  addresses_to_search = [user.address for user in users]
---
code: |
  wants_to_file = dict()
  wants_to_file['answer'] = True
  if not original_hearing_date_past:
    wants_to_file['continuance'] = True
  else:
    wants_to_file['continuance'] = True
---
id: eviction motion to continue review screen
event: review_eviction_defender
question: |
  Review your answers
review:
  - Edit: service_methods
    button: |
      **Service methods**:
      ${ service_methods }
  - Edit: trial_court
    button: |
      **Trial court**
  
      % if defined("trial_court.address.county"):
      * address: ${ trial_court.address.block() }
      % endif
      % if defined("trial_court.division"):
      * division: ${ trial_court.division }
      % endif
  - Edit: users.revisit
    button: |
      **Users**

      % for item in users:
        * ${ item }
      % endfor
  - Edit: original_hearing_date
    button: |
      **Date of original hearing**:
      ${ original_hearing_date }
  - Edit: other_parties.revisit
    button: |
      **Other parties**

      % for item in other_parties:
        * ${ item }
      % endfor
  - Edit: service_date
    button: |
      **Date of Service**:
      ${ service_date }
  - Edit: docket_number
    button: |
      **Docket number**:
      ${ docket_number }
  - Edit: original_hearing_time
    button: |
      **Original hearing time**:
      ${ original_hearing_time }
---
continue button field: users.revisit
question: |
  Edit users
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
continue button field: other_parties.revisit
question: |
  Edit other_parties
subquestion: |
  ${ other_parties.table }

  ${ other_parties.add_action() }
---
table: other_parties.table
rows: other_parties
columns:
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
edit:
  - address.address
confirm: True

---
id: download eviction_defender
event: eviction_defender_download
question: |
  All done
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_eviction_defender'), label='Edit answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=True) }

progress: 100
---
objects:
  - eviction_defender_post_interview_instructions: ALDocument.using(title="Instructions", filename="eviction_helper_next_steps.docx", enabled=True, has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
  - eviction_motion_to_continue_attachment: ALDocument.using(title="Postpone your eviction hearing", filename="eviction_motion_to_continue.docx", has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
  - eviction_answer_attachment: ALDocument.using(title="File an Answer and Affirmative Defenses", filename="answer_defenses.docx", has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[eviction_defender_post_interview_instructions,eviction_motion_to_continue_attachment,eviction_answer_attachment], filename="eviction_helper.docx_package.pdf", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=attachment_list_court, filename="eviction_helper.docx_package.pdf", title="All forms to download for your records", enabled=True)
---
code: |
  eviction_motion_to_continue_attachment.enabled = not original_hearing_date_past
---
code: |
  eviction_answer_attachment.enabled = True
---
attachments:
  - name: eviction motion to continue post interview instructions
    filename: Post-interview-instructions     
    variable name: eviction_defender_post_interview_instructions[i]        
    skip undefined: True
    docx template file: eviction_helper_next_steps.docx
  - name: eviction motion to continue attachment
    filename: eviction_motion_to_continue.docx     
    variable name: eviction_motion_to_continue_attachment[i]        
    skip undefined: True
    docx template file: motionToContinue.docx
  - name: eviction answer
    filename: answer_defenses.docx     
    variable name: eviction_answer_attachment[i]        
    skip undefined: True
    docx template file: answer_defenses.docx
---
only sets: docket_header
question: Case Header
subquestion: |
  The first tab you see when you open your case is the "Case Header" tab, which will look something like this -
  
  [FILE CaseHeader.png, 100%]
fields:
  - Docket Number: docket_number
  - note: |
      The Docket Number is at the top of the page, with white type on a blue blackground.  It usually starts with the last two digits of the year (22 for 2022).  
  - Date Filed: filing_date
    datatype: date
  - Case Type: case_type
    datatype: radio
    choices:
      - AC Rent and Possession
      - AC Unlawful Detainer
      - AC Landlord Action (Bulk)
      - Other
continue button field: docket_header
---
if: docket_available and len(users)==1
question: Is any other tenant listed on this eviction case?
subquestion: |
  In an eviction case, tenants are called Defendants.  Defendants are listed underneath the Plaintiffs, and your name and address should be included as a Defendant.
  
fields:
  - Are there any other Defendants listed besides you?: users.there_is_another
    datatype: yesnoradio
---
if: petition_available and len(users)==1
question: Is any other tenant listed on this eviction case?
subquestion: |
  In eviction cases, tenants are called Defendants.  Defendants are listed underneath the Plaintiffs, and your name and address should be included as a Defendant.
  
  [FILE ComplaintCaptionDefendant.png, 100%]
  
fields:
  - Are there any other Defendants listed besides you?: users.there_is_another
    datatype: yesnoradio
---
id: Landlord representation
question: Does the landlord have an attorney?
subquestion: |
  If the landlord is represented by an attorney, then it will say "represented by" next to the landlord's name, and the attorney's name address will be to the right.
fields:
  - Is ${ other_parties[i] } represented by an attorney?: other_parties[i].attorney.there_are_any
    datatype: yesnoradio
---
sets:
  - other_parties[i].attorney[j].name.first
  - other_parties[i].attorney[j].name.last
  - other_parties[i].attorney[j].name.middle
  - other_parties[i].attorney[j].name.suffix
question: What is the name of the ${ other_parties[i] }'s attorney?
fields:
  - code: |
      other_parties[i].attorney[j].name_fields()
---  
id: Rent paid
question: Have you paid any of the alleged rent due?
fields:
  - no label: was_rent_paid
    datatype: yesnomaybe
  - How much have you paid?: rent_amount_paid
    input type: radio
    show if: was_rent_paid
    choices: 
      - "I've paid the full amount alleged": "all"
      - "I've paid part of the amount alleged": "a portion"
