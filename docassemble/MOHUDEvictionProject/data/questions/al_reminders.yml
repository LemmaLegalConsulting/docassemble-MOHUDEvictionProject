####### This file is not currently used because Case.net reminders are a better option #######
---
mandatory: True
code: |
  allow_cron = True
---
id: wants reminders
question: |
  % if person_answering == "tenant":
  Would you like to get a reminder about important follow-up steps?
  % else:
  Would the tenant like to get a reminder about important follow-up steps?
  % endif
subquestion: |
  % if person_answering == "tenant":
  We can send you a reminder, by text or email,
  % else:
  We can send the tenant a reminder, by text or email,
  % endif
  % if len(al_reminders) == 1:
  about ${ next(iter(al_reminders.values()))["description"][:1].lower() }${ fix_punctuation(next(iter(al_reminders.values()))["description"][1:]) }
  % else:
  about:

  % for reminder in al_reminders.values():
  * ${ reminder["description"]}
  % endfor
  % endif
fields:
  - label: |
      % if person_answering == "tenant":
        I want to get reminders
      % else:
        The tenant wants to get reminders
      % endif
    field: al_user_wants_reminders
    datatype: yesnoradio
  - label: |
      % if person_answering == "tenant":
        I want to get reminders by
      % else:
        The tenant wants to get reminders by
      % endif
    field: al_user_preferred_reminder_formats
    datatype: checkboxes
    choices:
      - SMS (text message): sms
      - Email: email
    minlength: 1
    validation messages:
      minlength: |
        % if person_answering == "tenant":
        You need to choose to get reminders by either email or SMS, or both.
        % else: 
        The tenant needs to choose to get reminders by either email or SMS, or both.
        % endif
    show if: al_user_wants_reminders   
  - label: |
      % if person_answering == "tenant":
        The email I want to use is
      % else:
        The email the tenant wants to use is
      % endif
    field: al_user_reminder_email
    datatype: email
    default: |
      % if defined("users[0].email"):
      ${ users[0].email }
      % elif user_logged_in():
      ${ user_info().email }
      % endif
    show if: al_user_preferred_reminder_formats["email"]
  - label: |
      % if person_answering == "tenant":
        The phone number I want to use is
      % else:
        The phone number the tenant wants to use is
      % endif
    field: al_user_reminder_phone
    default: |
      % if defined("users[0].mobile_number"):
      ${ users[0].mobile_number }
      % elif defined("users[0].phone_number"):
      ${ users[0].phone_number }
      % endif
    validate: |
      lambda y: phone_number_is_valid(y) or validation_error("Enter a valid phone number")
    show if: al_user_preferred_reminder_formats["sms"]
---
variable name: al_reminders
data:
  filing_documents:
    description: Filing these documents
    date: ${ today().plus(days=3).format("yyyy-MM-dd") }
    email template: al_reminder_filing_template
    sms template: al_reminder_filing_template
---
code: |
  al_reminders[i]["initial sms template"] = "al_reminder_initial_sms_template"
  al_reminders[i]["initial email template"] = "al_reminder_initial_email_template"
---
template: al_reminder_initial_sms_template
content: |
  % if person_answering == "tenant":
  You asked to get a reminder of important dates when you used "${ all_variables(special='titles').get('title', AL_ORGANIZATION_TITLE) }".
  You will get the reminders at this phone number.
  % else:
  The tenant asked to get a reminder of important dates when they used "${ all_variables(special='titles').get('title', AL_ORGANIZATION_TITLE) }".
  The tenant will get the reminders at this phone number.
  % endif
---
template: al_reminder_initial_email_template
subject: |
  % if person_answering == "tenant":
  You are now signed up for reminders
  % else:
  The tenant is now signed up for reminders
  % endif
content: |
  % if person_answering == "tenant":
  The tenant asked to get a reminder of important dates when they used "${ all_variables(special='titles').get('title', AL_ORGANIZATION_TITLE) }".
  The tenant will get the reminders using this email address.
  % else:
  You asked to get a reminder of important dates when you used "${ all_variables(special='titles').get('title', AL_ORGANIZATION_TITLE) }".
  You will get the reminders using this email address.
  % endif
---
template: al_reminder_filing_template
subject: |
  % if person_answering == "tenant":
  Did you file your ${ all_variables(special='titles').get('title', AL_ORGANIZATION_TITLE) } documents yet?
  % else:
  Did the tenant file their ${ all_variables(special='titles').get('title', AL_ORGANIZATION_TITLE) } documents yet?
  % endif
content: |
  % if person_answering == "tenant":
  If you have not filed yet, make a plan to or file today!
  % else:
  If the tenant has not filed yet, they should make a plan to or file today!
  % endif
---
event: cron_daily
code: |
  # NOTE: there can only be one cron_daily per interview. If you want to add additional daily cron tasks instead of replacing
  # this one, you need to copy this block's contents into your new block.
  # In addition, this cron will stop ALL cron tasks on the session once it runs through to the end. If you have other
  # crons that still need to run, you need to replace this block as well.

  if al_user_wants_reminders:
    import time
    from random import random
    # Avoid all of the interviews using up resources at the same time, vary the start time a bit
    time.sleep(random()*10)

    for reminder in al_reminders:
      if today() >= as_datetime(al_reminders[reminder]["date"]) and task_not_yet_performed(f"al_reminder_{reminder}"):
        if al_user_preferred_reminder_formats.get("email") and task_not_yet_performed(f"al_reminder_{reminder}_email"):
          if not send_email(to=al_user_reminder_email, template=value(al_reminders[reminder]["email template"]), task=f"al_reminder_{reminder}_email"):
            log(f"{ all_variables(special='titles').get('title', AL_ORGANIZATION_TITLE) }: Couldn't send reminder to { showifdef('users[0]') } via {al_user_reminder_email}")
        if al_user_preferred_reminder_formats.get("sms") and task_not_yet_performed(f"al_reminder_{reminder}_sms"):
          if not send_sms(to=al_user_reminder_phone, template=value(al_reminders[reminder]["sms template"]), task=f"al_reminder_{reminder}_sms"):
            log(f"{ all_variables(special='titles').get('title', AL_ORGANIZATION_TITLE) }: Couldn't send reminder to { showifdef('users[0]') } via {al_user_reminder_phone}")
        mark_task_as_performed(f"al_reminder_{reminder}")

    if all(
      task_performed(f"al_reminder_{reminder}")
      for reminder in al_reminders
    ):
      allow_cron = False # Stop calling cron on this session once all tasks performed
  else:
    allow_cron = False
  response()
---
code: |
  if al_user_wants_reminders and task_not_yet_performed(f"al_reminder_initial_{reminder}"):
    if al_user_preferred_reminder_formats.get("email") and task_not_yet_performed(f"al_reminder_initial_{reminder}_email"):
      if not send_email(to=al_user_reminder_email, template=value(al_reminders[reminder]["initial email template"]), task=f"al_reminder_initial_{reminder}_email"):
        log(f"{ all_variables(special='titles').get('title', AL_ORGANIZATION_TITLE) }: Couldn't send reminder to { showifdef('users[0]') } via {al_user_reminder_email}")
    if al_user_preferred_reminder_formats.get("sms") and task_not_yet_performed(f"al_reminder_initial_{reminder}_sms"):
      if not send_sms(to=al_user_reminder_phone, template=value(al_reminders[reminder]["initial sms template"]), task=f"al_reminder_initial_{reminder}_sms"):
        log(f"{ all_variables(special='titles').get('title', AL_ORGANIZATION_TITLE) }: Couldn't send reminder to { showifdef('users[0]') } via {al_user_reminder_phone}")
    mark_task_as_performed(f"al_reminder_initial_{reminder}")

  al_reminders_sent_initial_test_message