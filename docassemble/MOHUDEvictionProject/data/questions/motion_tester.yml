---
include:
  - shared.yml
  - court_information.yml
---
metadata:
  title: |
    File a motion
  short title: |
    File a motion
  title url: |
    https://motenanthelp.org/
  tags:
    - HO-02-00-00-00
  authors:
    - Quinten Steenhuis
    - Toby Fey
    - Ian Eisaman
    - Mia Bonardi
---
mandatory: True
code: |
  nav.set_section("section_intro")
  al_intro_screen
  motions_intro_screen
  
  tenant_got_summons = True
  petition_available = True
  tenant_using_casenet = False

  tenant_doc_name
  landlord_doc_name
  
  nav.set_section("section_about")
  person_answering
  for user in users:
    user.name.first
    user.address.address
    
  nav.set_section("section_about_ll")
  for party in other_parties:
    party.address.address
    party.attorney.gather()
  
  nav.set_section("section_about_court")
  trial_court.name
  docket_number
  
  eviction_reason
  check_case_type
  
  has_written_lease
  lease_attached
  
  nav.set_section("section_service_method")
  other_parties[0].service_method
  if other_parties[0].service_method == "email":
    other_parties[0].service_email
  elif other_parties[0].service_method in ["mail", "hand"]:
    if other_parties[0].attorney.there_are_any:
      other_parties[0].attorney[0].address.address
    other_parties[0].service_address.address
  
  nav.set_section("Your Motions")
  
  if motion_list['motion_to_dismiss']:
    nav.set_section("section_motion_to_dismiss")
    motion_to_dismiss_order
  if motion_list['motion_to_shorten_time']:
    nav.set_section("section_motion_to_shorten_time")
    motion_to_shorten_time_order
  if motion_list['motion_to_set_aside_judgment']:
    nav.set_section("section_motion_to_set_aside_judgment")
    motion_to_set_aside_judgment_order
  if motion_list['motion_for_leave_to_file']:
    nav.set_section("section_motion_for_leave_to_file")
    motion_for_leave_to_file_order
  if motion_list['motion_to_elevate_security']:
    nav.set_section("section_motion_to_elevate_security")
    motion_to_elevate_security_order
  if motion_list['notice_of_hearing']:
    nav.set_section("section_notice_of_hearing")
    notice_of_hearing_order

  nav.set_section("section_review")
  review_motions
  
  nav.set_section("section_download")
  signature_date
  motions_download
---
code: |
  enable_al_nav_sections = True
---
reconsider: True
variable name: al_nav_sections
data from code:
  - section_intro: |
      "Getting started"
  - section_about: |
      "About you"
  - section_about_ll: |
      "About your landlord"
  - section_about_court: |
      "About your court case"
  - section_service_method: |
      "Service method"
  - Your Motions:
    - section_motion_to_dismiss: |
        "Motion to Dismiss or For a More Definite Statement"
      hidden: |
        not showifdef("motion_list['motion_to_dismiss']")
    - section_motion_to_shorten_time: |
        "Motion to Shorten Time"
      hidden: |
        not showifdef("motion_list['motion_to_shorten_time']")
    - section_motion_to_set_aside_judgment: |
        "Motion to Set Aside Judgment"
      hidden: |
        not showifdef("motion_list['motion_to_set_aside_judgment']")
    - section_motion_for_leave_to_file: |
        "Motion for Leave to File Responsive Pleadings"
      hidden: |
        not showifdef("motion_list['motion_for_leave_to_file']")
    - section_motion_to_elevate_security: |
        "Motion to Elevate Security"
      hidden: |
        not showifdef("motion_list['motion_to_elevate_security']")
    - section_notice_of_hearing: |
        "Notice of Hearing"
      hidden: |
        not showifdef("motion_list['notice_of_hearing']")
  - section_review: |
      "Review your answers"
  - section_download: |
      "Download, print, and file"
---
code: |
  motion_for_leave_to_file_intro
  petition_date
  opposing_party_consent_to_motion_for_leave_to_file
  original_hearing_date
  discovery_requested
  if reasons_unable_to_prepare_exists: 
    reasons[0]
  if trial_date_set:
    trial_date
  wishes_to_assert_affirmative_defenses 
  motion_for_leave_to_file_preview
  motion_for_leave_to_file_order = True
---
code: |
  motion_to_dismiss_intro
  motion_to_dismiss_preview
  motion_to_dismiss_order = True
---
code: |
  motion_to_set_aside_intro
  petition_date 
  statements[0]
  motion_to_set_aside_preview
  motion_to_set_aside_judgment_order = True
---
code: |
  motion_to_shorten_time_intro
  trial_date
  if counsel_retained:
    days_before_trial
  opposing_party_consent_to_motion_to_shorten_time
  no_dilatory_motive 
  may_resolve_case_more_efficiently
  motions_attached
  motion_to_shorten_time_preview
  motion_to_shorten_time_order = True
---
code: |
  motion_to_elevate_security_intro
  opposing_party_consent_to_motion_to_elevate_security
  rental_address.address
  eviction_outcome
  reason_for_elevated_security
  tenant_exposed_to_threats
  tenant_believes_landlords_wont_rent 
  motion_to_elevate_security_preview
  motion_to_elevate_security_order = True
---
code: |
  notice_of_hearing_intro
  new_hearing_date
  motions_for_hearing
  notice_of_hearing_preview
  notice_of_hearing_order = True
---
code: |
  motion_for_leave_to_file_attachment.enabled = motion_list['motion_for_leave_to_file']
---
code: |
  motion_to_dismiss_attachment.enabled = motion_list['motion_to_dismiss']
---
code: |
  motion_to_set_aside_attachment.enabled = motion_list['motion_to_set_aside_judgment']
---
code: |
  motion_to_shorten_time_attachment.enabled = motion_list['motion_to_shorten_time']
---
code: |
  motion_to_elevate_security_attachment.enabled = motion_list['motion_to_elevate_security']
---
code: |
  notice_of_hearing_attachment.enabled = motion_list['notice_of_hearing']
---
id: motions intro
continue button field: motions_intro_screen
question: | 
  DIY Motions
subquestion: |
  This form can help you prepare the following {motion|motions}: 
  
    * Motion to Dismiss or For a More Definite Statement
    
    * Motion to Shorten Time
    
    * Motion to Set Aside Judgment
    
    * Motion for Leave to File Responsive Pleadings
    
    * Motion to Elevate Security
    
  And a required Notice of Hearing for each motion.
---
id: Motion to Dismiss or For a More Definite Statement intro
continue button field: motion_to_dismiss_intro
question: |
  Motion to Dismiss or For a More Definite Statement
subquestion: |
  You said you want to make a Motion to Dismiss or For a More Definite Statement in your case.
  
  You have answered all the questions needed for this motion already. You will have a chance to review it on the next screen. It may take a second to load.
---
question: |
  Did the Plaintiff file a rent and posession

---
id: Motion to Shorten Time intro
continue button field: motion_to_shorten_time_intro
question: |
  Motion to Shorten Time
subquestion: |
  You said you want to make a Motion to Shorten Time in your case. 
  
  We have some more questions to ask you about this motion. You will have a chance to review the motion after you answer the following questions.
---
id: Motion to Set Aside Judgment intro
continue button field: motion_to_set_aside_intro
question: |
  Motion to Set Aside Judgment
subquestion: |
  You said you want to make a Motion to Set Aside Judgment in your case. 
  
  We have some more questions to ask you about this motion. You will have a chance to review the motion after you answer the following questions.
---
id: Motion for Leave to File Responsive Pleadings intro
continue button field: motion_for_leave_to_file_intro
question: |
  Motion for Leave to File Responsive Pleadings
subquestion: |
  You said you want to make a Motion for Leave to File Responsive Pleadings in your case. 
  
  We have some more questions to ask you about this motion. You will have a chance to review the motion after you answer the following questions.
---
id: Motion to Elevate Security intro
continue button field: motion_to_elevate_security_intro
question: |
  Motion to Elevate Security
subquestion: |
  You said you want to make a Motion to Elevate Security in your case. 
  
  We have some more questions to ask you about this motion. You will have a chance to review the motion after you answer the following questions.
---
id: Notice of Hearing intro
continue button field: notice_of_hearing_intro
question: |
  Notice of Hearing
subquestion: |
  You said you want to make a Notice of Hearing in your case. 
  
  We have some more questions to ask you about this motion. You will have a chance to review the motion after you answer the following questions.
---
### not changing "you" reference language on this question because it appears before selection of person_answering
id: basic questions intro screen
decoration: form-lineal
question: |
  DIY Motions: Missouri Tenant Help
subquestion: |
  Missouri Tenant Help can help you complete and download forms in 3 steps:

  Step 1. Fill in your form.  
  
  Step 2. Preview the completed form.  
  
  Step 3. Download and print the final form. **You will need to deliver it.**
  
  This site is not a lawyer. If you would like a lawyer, find [a Missouri legal aid provider](https://www.lsmo.org/). If you are outside Missouri, find your [your local
  legal aid provider](https://www.lsc.gov/what-legal-aid/find-legal-aid).
  
  Tap the {green words} in any screen for a definition or more information.
  
  You can also click an underlined link with a triangle next to it to see more information.
  ${ collapse_template(collapsible_info_template) }
  
  % if chat_partners_available().help:
  Live help is currently available in this interview. Click the speech bubble
  (:comment-alt:) in the navigation bar to connect to a live advocate for help.
  % endif
  
  ${ display_template(about_page_contents, scrollable=True, collapse=True) }
fields:
  - To continue, you must accept the terms of use: acknowledged_information_use
    datatype: checkboxes
    none of the above: False    
    minlength: 1
    choices:
      - I accept the terms of use.
    validation messages:
      minlength: |
        You cannot continue unless you agree to the terms of use.
continue button field: al_intro_screen
---
reconsider: 
  - motion_checkboxes
id: motion list
question: |
  Which {motion|motions} do you need?
fields:
  - Motions: motion_list
    datatype: checkboxes
    none of the above: false
    code: |
      [{val["option"]:val["label"]} for val in motion_checkboxes if val["visible"]]
---
variable name: motion_checkboxes
data from code:
  - option: |
      "motion_for_leave_to_file"
    label: |
      "Motion for Leave to File Responsive Pleadings"
    visible: True
  - option: |
      "motion_to_shorten_time"
    label: |
      "Motion to Shorten Time"
    visible: True
  - option: |
      "motion_to_elevate_security"
    label: |
      "Motion to Elevate Security"
    visible: True
  - option: |
      "notice_of_hearing"
    label: |
      "Notice of Hearing"
    visible: True
  - option: |
      "motion_to_dismiss"
    label: |
      "Motion to Dismiss or For a More Definite Statement"
    visible: |
      has_written_lease and lease_attached and eviction_reason["nonpayment of rent"]
  - option: |
      "motion_to_set_aside_judgment"
    label: |
      "Motion to Set Aside Judgment"
    visible: |
      final_judgment and judgment_date <= today().minus(days=30)
---
id: judgment_date
question: |
  Has a judge made a final decision in this case?
fields:
  - A judge entered a final judgment in this case: final_judgment
    datatype: yesnoradio
  - Date: judgment_date
    datatype: ThreePartsDate
    alMax: ${ today() }
    show if: final_judgment
---
id: petition_date 
question: |
  When did the {Plaintiff} {file} their {petition} in this case?
fields:
  - Date: petition_date
    datatype: ThreePartsDate
    alMax: ${ today() }
---
objects: 
  - statements: DAList
---
id: statements
question: |
  Add any supporting statements to your {motion}. 
fields: 
  - Statement: statements[i]
    input type: area
    rows: 5
list collect: True
---
objects: 
  - rental_address: ALAddress
---
id: rental address
question: |
  % if person_answering == "tenant":
  What is the address of your rental property?
  % else:
  What is the address of the tenant's rental property?
  % endif
fields:
  - Rental property address: rental_address
    datatype: object_radio
    default: 
      - users[0].address if defined(users[0].address.attr_name("address")) else None
    choices:
      - users[0].address if defined(users[0].address.attr_name("address")) else None
      - users[0].mailing_address if defined(users[0].mailing_address.attr_name("address")) else None
    object labeler: |
      lambda y: y.on_one_line()      
    none of the above: |
      Somewhere else   
  - Address: rental_address.address
    address autocomplete: True
    show if:
      variable: rental_address
      is: null
  - Unit: rental_address.unit
    required: False
    show if:
      variable: rental_address
      is: null
  - City: rental_address.city
    show if:
      variable: rental_address
      is: null
  - State: rental_address.state
    code: |
      states_list(country_code=AL_DEFAULT_COUNTRY)
    default: ${ AL_DEFAULT_STATE }
    show if:
      variable: rental_address
      is: null 
  - Zip: rental_address.zip
    required: False 
    show if:
      variable: rental_address
      is: null
---
id: outcome
question: |
  What was the outcome of this eviction case?
fields:
  - Outcome: eviction_outcome
    datatype: radio
    choices:
      - Default Judgment
      - Dismissal
---
id: reasons for motion
question: |
  % if person_answering == "tenant":
  Why do you need the court records secured?
  % else: 
  Why does the tenant need the court records secured?
  % endif
subquestion: |
  % if person_answering == "tenant":
  Do any of the following reasons justify securing case records in your case?
  % else: 
  Do any of the following reasons justify securing case records in the plaintiff's case?
  % endif
fields:
  - Reasons: reason_for_elevated_security
    datatype: checkboxes
    choices:
      - Eviction was improperly granted
      - Domestic violence
      - Other
    none of the above: false
  - Other: reason_for_elevated_security_other
    input type: area
    rows: 5
    show if:
      variable: reason_for_elevated_security['Other']
      is: True
---
id: reasons for motion
question: |
  Prior or current costs
subquestion: |
  % if person_answering == "tenant":
  Have you already experienced costs because of the visibility of this case, including excessive rental application fees or being summarily denied for housing?
  % else: 
  Has the tenant already experienced costs because of the visibility of this case, including excessive rental application fees or being summarily denied for housing?
  % endif
fields:
  - Experienced costs: tenant_exposed_to_threats
    datatype: yesnoradio
---
id: future costs
question: |
  Future costs
fields:
  - Do you believe landlords will refuse to rent to you because the information about this case is public?: tenant_believes_landlords_wont_rent 
    datatype: yesnoradio
  - Will you have to pay higher rent, or find a co-signer, or face other economic consequences if this case remains public?: economic_consequences
    datatype: yesnoradio
  - Will the visibility of the eviction case hinder your ability to rent housing?: tenant_would_be_prejudiced
    datatype: yesnoradio
---
id: hearing date time
question: |
  % if person_answering == "tenant":
  When is your original {hearing} planned?
  % else: 
  When is the tenant's original {hearing} planned?
  % endif
fields:
  - Date: original_hearing_date
    datatype: date
  - Time: original_hearing_time
    datatype: radio
    choices: 
      - 9:00 AM
      - Other
    default: 9:00 AM
  - Other time: other_time
    js show if: |
      val("original_hearing_time") == "Other"
---
id: trial date 
question: |
  Trial
fields:
  - Has the trial date been set?: trial_date_set
    datatype: yesnoradio
  - Trial date: trial_date
    datatype: date
    show if:
      variable: trial_date_set
      is: True
---
id: trial date 
question: |
  Do you want to answer and assert defenses?
fields:
  - no label: wishes_to_assert_affirmative_defenses
    datatype: yesnoradio
---
objects: 
  - reasons: DAList
---
id: reasons
question: |
  Add any reasons. 
fields: 
  - Reason: reasons[i]
    input type: area
    rows: 5
list collect: True
---
id: reasons_unable_to_prepare_exists
question: |
  Is there any reason you were unable to prepare and {file} the responsive pleading on time?
fields:
  - Reasons exist: reasons_unable_to_prepare_exists
    datatype: yesnoradio
---
id: discovery
question: |
  Discovery
fields:
  - Did you request discovery?: discovery_requested
    datatype: yesnoradio
  - Do you plan to conduct discovery?: discovery_planned
    datatype: yesnoradio
    show if:
      variable: discovery_requested
      is: False
  - Did the landlord provide a response to discovery requests?: discovery_produced
    datatype: yesnoradio
    show if:
      variable: discovery_requested
      is: True
  - What date did the landlord provide discovery?: discovery_provided_date
    datatype: date
    show if:
      variable: discovery_produced
      is: True
  - Do you plan to object to the landlord's objections to discovery?: discovery_objections_planned
    datatype: yesnoradio
    show if:
      variable: discovery_produced
      is: True
---
id: trial_date
question: |
  % if person_answering == "tenant":
  When is your trial date planned?
  % else: 
  When iis the tenant's trial date planned?
  % endif
fields:
  - Date: trial_date
    datatype: ThreePartsDate
    alMin: ${ today() }
  - Time: trial_time
---
id: date_counsel_retained
question: |
  % if person_answering == "tenant":
  Did you get a lawyer for this case?
  % else: 
  Did the tenant hire you for this case?
  % endif
fields:
  - no label: counsel_retained
    datatype: yesnoradio
  - label: |
      % if person_answering == "tenant":
      When did you get a lawyer for this case?
      % else: 
      When did the tenant hire you for this case?
      % endif
    field: date_counsel_retained
    datatype: ThreePartsDate
    alMax: ${ today() }
    show if: counsel_retained
---
### make this question plain language
id: no_dilatory_motive
question: |
  Unfair motive 
subquestion: |
  % if person_answering == "tenant":
  Is there any dilatory or unfair motive to shorten time?  Was there enough time to submit challenges to the Plaintiff's petition before?
  % else: 
  Is there any dilatory or unfair motive to shorten time?  Was there enough time to submit challenges to the Plaintiff's petition before?
  % endif
fields:
  - Any unfair motive?: no_dilatory_motive 
    datatype: yesnoradio
---
id: may_resolve_case_more_efficiently
question: |
  Is it possible that the case will be resolved more efficiently if the judge grants this motion?
fields:
  - Efficiency possible: may_resolve_case_more_efficiently
    datatype: yesnoradio
---
id: opposing_party_consent_to_motion_to_elevate_security
question: |
  Does the landlord consent to this Motion to Elevate Security?
fields:
  - Does the landlord consent to this motion?: opposing_party_consent_to_motion_to_elevate_security
    datatype: yesnoradio
---
id: opposing_party_consent_to_motion_for_leave_to_file
question: |
  Does the landlord consent to this Motion for Leave to File Responsive Pleadings?
fields:
  - Does the landlord consent to this motion?: opposing_party_consent_to_motion_for_leave_to_file
    datatype: yesnoradio
---
id: opposing_party_consent_to_motion_to_shorten_time
question: |
  Does the landlord consent to this Motion to Shorten Time?
fields:
  - Does the landlord consent to this motion?: opposing_party_consent_to_motion_to_shorten_time
    datatype: yesnoradio
---
code: |
  before_trial = date_difference(starting=date_counsel_retained,ending=trial_date)
  if before_trial.days == 0:
    days_before_trial = "the same day as"
  elif before_trial.days == 1:
    days_before_trial = "the day prior to"
  else:
    days_before_trial = nice_number(before_trial.days) + " days prior to"
---
id: new hearing date time
question: When is the new {hearing}?
fields:
  - Date: new_hearing_date
    datatype: ThreePartsDate
    alMin: ${ today() }
  - "New hearing time": new_hearing_time
    datatype: radio
    choices: 
      - 9:00 AM
      - Other
    default: 9:00 AM
  - Other time: new_other_time
    js show if: |
      val("new_hearing_time") == "Other"
---
code: |
  motions_attached = list()
  for motion in motion_list.true_values():
    if not motion == "motion_to_shorten_time":
      motions_attached.append(motion_list[motion])
---
code: |
  motions_for_hearing = list()
  for motion in motion_list.true_values():
    if not motion == "notice_of_hearing":
      motions_for_hearing.append(motion_checkboxes[motion])
---
attachments:
  - name: motion to shorten time
    filename: motion_to_shorten_time.docx     
    variable name: motion_to_shorten_time_attachment[i]        
    skip undefined: True
    docx template file: motion_to_shorten_time.docx
  - name: motion to dismiss
    filename: motion_to_dismiss  
    variable name: motion_to_dismiss_attachment[i]        
    skip undefined: True
    docx template file: motion_to_dismiss.docx
  - name: motion to set aside
    filename: motion_to_set_aside
    variable name: motion_to_set_aside_attachment[i]        
    skip undefined: True
    docx template file: motion_to_set_aside.docx
  - name: motion for leave to file answer
    filename: motion_for_leave_to_file_answer.docx     
    variable name: motion_for_leave_to_file_attachment[i]        
    skip undefined: True
    docx template file: motion_for_leave_to_file.docx
  - name: motion to elevate security
    filename: motion_to_elevate_security.docx     
    variable name: motion_to_elevate_security_attachment[i]       
    skip undefined: True
    docx template file: motion_to_elevate_security.docx
  - name: notice of hearing
    filename: notice_of_hearing.docx     
    variable name: notice_of_hearing_attachment[i]       
    skip undefined: True
    docx template file: notice_of_hearing.docx
---
objects:
  - motion_to_set_aside_attachment: ALDocument.using(title="File a Motion to Set Aside Judgment", filename="motion_to_set_aside.docx", has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
  - motion_to_shorten_time_attachment: ALDocument.using(title="File a Motion to Shorten Time", filename="motion_to_shorten_time.docx", has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
  - motion_to_dismiss_attachment: ALDocument.using(title="File a Motion to Dismiss", filename="motion_to_dismiss.docx", has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
  - motion_for_leave_to_file_attachment: ALDocument.using(title="File a Motion for Leave to File Responsive Pleadings", filename="motion_for_leave_to_file_answer.docx", has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
  - motion_to_elevate_security_attachment: ALDocument.using(title="File a Motion to Elevate Security", filename="motion_to_elevate_security.docx", has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
  - notice_of_hearing_attachment: ALDocument.using(title="File a Notice of Hearing", filename="notice_of_hearing.docx", has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
  
---
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[motion_to_dismiss_attachment, motion_to_shorten_time_attachment, motion_to_set_aside_attachment, motion_for_leave_to_file_attachment, motion_to_elevate_security_attachment,notice_of_hearing_attachment], filename="motions.docx", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=attachment_list_court, filename="motions.docx", title="All forms to download for your records", enabled=True)
---
id: download motions
event: motions_download
question: |
  All done
subquestion: |
  
  % if device().is_mobile:
  ${ al_user_bundle.download_list_html(format="pdf") }
  % else:
  ${ al_user_bundle.download_list_html(format="docx") }
  % endif
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=True) }

progress: 100
---
id: motion_to_elevate_security_preview
continue button field: motion_to_elevate_security_preview
question: |
  Preview your Motion to Elevate Security
subquestion: |
  Here is a preview of your Motion to Elevate Security.
  
  ${ motion_to_elevate_security_attachment.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_motions'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue.
---
id: motion_for_leave_to_file_preview
continue button field: motion_for_leave_to_file_preview
question: |
  Preview your Motion for Leave to File Responsive Pleadings
subquestion: |
  Here is a preview of your Motion for Leave to File Responsive Pleadings.
  
  ${ motion_for_leave_to_file_attachment.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_motions'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue.
---
id: motion_to_dismiss_preview
continue button field: motion_to_dismiss_preview
question: |
  Preview your Motion to Dismiss
subquestion: |
  Here is a preview of your Motion to Dismiss.
  
  ${ motion_to_dismiss_attachment.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_motions'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue.
---
id: motion_to_shorten_time_preview
continue button field: motion_to_shorten_time_preview
question: |
  Preview your Motion to Shorten Time
subquestion: |
  Here is a preview of your Motion to Shorten Time.
  
  ${ motion_to_shorten_time_attachment.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_motions'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue.
---
id: motion_to_set_aside_preview
continue button field: motion_to_set_aside_preview
question: |
  Preview your Motion to Set Aside Judgment
subquestion: |
  Here is a preview of your Motion to Set Aside Judgment.
  
  ${ motion_to_set_aside_attachment.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_motions'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue.
---
id: notice_of_hearing_preview
continue button field: notice_of_hearing_preview
question: |
  Preview your Notice of Hearing
subquestion: |
  Here is a preview of your Notice of Hearing.
  
  ${ notice_of_hearing_attachment.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_motions'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue.

---
id: review_motions
continue button field: review_motions
question: |
  Review your answers
subquestion: |
  Look over your answers below. If you need to make any changes, click the "Edit" button
  next to the answer that you want to change.
  
  **Note:** If you edit information about you, the other party, or your court case, that information will update on all of your motions.
review:
  - note: | 
      % if person_answering == "tenant":
      ##Information about you##
      % else:
      ##Information about the tenant##
      % endif
  - Edit:
      - users.revisit
    button: |
      Defendants:
      % if users.there_are_any:
      % for item in users:

         - **${ item }**

      % endfor
      % else:
      **None**
      % endif
  - note: | 
      ##Information about the other party##
  - Edit:
      - other_parties.revisit
    button: |
      Plaintiffs:
      % if other_parties.there_are_any:
      % for item in other_parties:
      
       - **${ item }**
      
      % if item.attorney.there_are_any:
         - Attorney: **${ item.attorney[0] }**
      **${ item.attorney[0].address }**
      
      % else:
         - Attorney: **None**
      
      % endif
         - Person or Business: **${ "Person" if item.person_type == "ALIndividual" else "Business" }**
      % endfor
      % else:
      **None**
      % endif
  - note: | 
      ##About your court case##
  - Edit:
      - trial_court.name
    button: |
      **Trial Court Name**
      
      ${ trial_court.name }
  - Edit:
      - docket_number
    button: |
      **Case number**
      
      ${ docket_number }
  - note: | 
      ##Your Motions##
  - Edit: |-
      motion_list
    button: |
      **Which motions do you need?**

      % for item in motion_list.true_values():
      - ${ motion_checkboxes[item] }
      % endfor
  #- note: | 
  #    ##Motion to Dismiss or For a More Definite Statement##
  #  show if: motion_list['motion_to_dismiss']
  - note: | 
      ##Motion to Shorten Time##
    show if: motion_list['motion_to_shorten_time']
  - Edit: |-
      opposing_party_consent_to_motion_to_shorten_time
    button: |
      **Landlord consent**
      
      ${ word(yesno(opposing_party_consent_to_motion_to_shorten_time)) }
  - Edit: |-
      trial_date
    button: |
      **Trial Date**
      
      ${ showifdef('trial_date') } ${ showifdef('trial_time') }
  - note: | 
      ##Motion to Set Aside Judgment##
    show if: motion_list['motion_to_set_aside_judgment']
  - Edit: |-
      statements.revisit
    button: |
      **Statements**

      % for item in statements:
      - ${ item }
      % endfor
  - Edit: |-
      judgment_date
    button: |
      **When was a judgment entered in this matter?**

      Date: ${ showifdef('judgment_date') }
  - Edit: |-
      petition_date
    button: |
      **When did the Plaintiff file their petition in this case?**

      Date: ${ showifdef('petition_date') }
    show if: motion_list['motion_to_set_aside_judgment']
  - Edit: |-
      counsel_retained
    button: |
      **Counsel**
      
      Has counsel: ${ word(yesno(counsel_retained)) }
      
      Date counsel retained: ${ date_counsel_retained }
  - Edit: |-
      no_dilatory_motive
    button: |
      **Any unfair motive?**

      ${ word(yesno(no_dilatory_motive)) }
  - Edit: |-
      may_resolve_case_more_efficiently
    button: |
      **Is it possible that the case will be resolved more efficiently if the judge grants this motion?**

      ${ word(yesno(may_resolve_case_more_efficiently)) }
  - note: | 
      ##Motion for Leave to File Responsive Pleadings##
    show if: motion_list['motion_for_leave_to_file']
  - Edit: |-
      opposing_party_consent_to_motion_for_leave_to_file
    button: |
      **Landlord consent**
      
      ${ word(yesno(opposing_party_consent_to_motion_for_leave_to_file)) }
  - Edit:
      - original_hearing_date
    button: |
      **Original hearing**
      
      Date: ${ original_hearing_date } 
      
      Time: ${ original_hearing_time }
  - Edit: |-
      petition_date
    button: |
      **When did the Plaintiff file their petition in this case?**

      Date: ${ showifdef('petition_date') }
    show if: motion_list['motion_for_leave_to_file']
  - Edit: |-
      trial_date_set
    button: |
      **Trial**

      Has the trial date been set?: ${ word(yesno(trial_date_set)) }

      Trial date: ${ showifdef('trial_date') } 
  - Edit: |-
      reasons_unable_to_prepare_exists
    button: |
      **Is there any reason you were unable to prepare and file the responsive pleading on time?**

      ${ word(yesno(reasons_unable_to_prepare_exists)) }
  - Edit: |-
      reasons.revisit
    button: |
      **Reasons**

      % for item in reasons:
      - ${ item }
      % endfor
  - Edit: |-
      wishes_to_assert_affirmative_defenses
    button: |
      **Do you want to answer and assert defenses?**

      ${ word(yesno(wishes_to_assert_affirmative_defenses)) }
  - Edit: |-
      discovery_requested
    button: |
      **Discovery**

      Did you request discovery?: ${ word(yesno(discovery_requested)) }

      Do you plan to conduct discovery?: ${ word(yesno(discovery_planned)) }

      Did the landlord provide a response to discovery requests?: ${ word(yesno(discovery_produced)) }

      What date did the landlord provide discovery?: ${ showifdef('discovery_provided_date') }

      Do you plan to object to the landlord's objections to discovery?: ${ word(yesno(discovery_objections_planned)) }
  - note: | 
      ##Motion to Elevate Security##
    show if: motion_list['motion_to_elevate_security']
  - Edit: |-
      opposing_party_consent_to_motion_to_elevate_security
    button: |
      **Landlord consent**
      
      ${ word(yesno(opposing_party_consent_to_motion_to_elevate_security)) }
  - Edit: |-
      rental_address.revisit
    button: |
      **Rental Address**

      Address: ${ rental_address.on_one_line() }
  - Edit: |-
      eviction_outcome
    button: |
      **What was the outcome of this eviction case?**

      Outcome: ${ showifdef('eviction_outcome') }
  - Edit: |-
      reason_for_elevated_security
    button: |
      **Reasons for Elevated Security** 
      
      ${ reason_for_elevated_security.true_values() }
      ${ showifdef('reason_for_elevated_security_other') }
  - Edit: |-
      tenant_exposed_to_threats
    button: |
      **Prior or current costs**

      Experienced costs: ${ word(yesno(tenant_exposed_to_threats)) }
  - Edit: |-
      tenant_believes_landlords_wont_rent
    button: |
      **Future costs**

      Do you believe landlords will refuse to rent to you because the information about this case is public?: ${ word(yesno(tenant_believes_landlords_wont_rent)) }

      Will you have to pay higher rent, or find a co-signer, or face other economic consequences if this case remains public?: ${ word(yesno(economic_consequences)) }

      Will the visibility of the eviction case hinder your ability to rent housing?: ${ word(yesno(tenant_would_be_prejudiced)) }
  - note: | 
      ##Notice of Hearing##
    show if: motion_list['notice_of_hearing']
  - Edit: |-
      new_hearing_date
    button: |
      **What date is the new hearing?**

      Date: ${ showifdef('new_hearing_date') }
  - Edit: |-
      new_hearing_time
    button: |
      **What time is the new hearing?**

      Date: ${ showifdef('new_hearing_time') }
---

event: |-
  statements.revisit

id: |-
  revisit statements

question: |-
  Edit your answers about Statements

subquestion: |-
  ${ statements.table }

---

event: |-
  rental_address.revisit

id: |-
  revisit rental_address

question: |-
  Edit your answers about Rental Address

subquestion: |-
  ${ rental_address.table }

---

event: |-
  reasons.revisit

id: |-
  revisit reasons

question: |-
  Edit your answers about Reasons

subquestion: |-
  ${ reasons.table }

---

columns:
  - Statement: |-
      row_item.statements[i] if hasattr(row_item, 'statements[i]') else ''

rows: |-
  statements

table: |-
  statements.table

---

columns:
  - Reason: |-
      row_item.reasons[i] if hasattr(row_item, 'reasons[i]') else ''

rows: |-
  reasons

table: |-
  reasons.table
---
