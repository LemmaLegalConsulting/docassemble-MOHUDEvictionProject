include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.GithubFeedbackForm:embedded_review.yml
  - defense_logic.yml
  - information_collected.yml
  - al_reminders.yml
  - docassemble.ALToolbox:display_template.yml
  - court_information.yml
  - autoterms.yml
  - discovery.yml
---
modules:
  - docassemble.demo.accordion
---
code: |
  feedback_form = f"{user_info().package}:feedback.yml"
---
features:
  bootstrap theme: motenanthelp.bootstrap.css
  css: custom.css
  inverse navbar: False
---
default screen parts:
  pre: |
  logo: |
    <span class="mo-logo">
      <img src="${ al_logo.url_for() }" alt="${ al_logo.alt_text }"/>
    </span>
  short logo: |
    <span class="mo-logo">
      <img src="${ al_logo.url_for() }" alt="${ al_logo.alt_text }"/>
    </span>
---
objects:
  - other_parties: ALPeopleList.using(there_are_any=True,complete_attribute="complete")
  - other_parties[i].attorney: ALPeopleList.using(complete_attribute="complete")
  - users[i].attorney: ALPeopleList.using(ask_number=True)
  - users: ALPeopleList.using(there_are_any=True)
  - offer_attempts: DAList.using(object_type=DAObject, complete_attribute="attempt_date")
---
code: |
  github_repo_name =  'docassemble-MOHUDEvictionProject'
---
objects:
  - al_logo: DAStaticFile.using(filename="logo.svg")
---
code: |
  interview_metadata['main_interview_key'] =  'eviction_defender'
---
code: |
  AL_DEFAULT_COUNTRY = "US"
---
code: |  
  AL_DEFAULT_STATE = "MO"
---
code: |
  al_form_type = "existing_case" 
---
code: |
  AL_ORGANIZATION_TITLE = "Missouri Tenant Help"
---
code: |
  AL_ORGANIZATION_HOMEPAGE = "https://motenanthelp.org/"
---
code: |
  user_started_case = False
---
code: |
  landlord_doc_name = "Plaintiff"
---
code: |
  tenant_doc_name = "Defendant"
---
event: about_this_interview
id: about AssemblyLine project
question: |
  About this form
# TODO: I think people might want more form-specific info here?
# It is easy to copy and edit this event without removing the version
# information. We may consider using the form description, adding a 
# thumbnail of the original form, etc. at some point.
subquestion: |  

  Missouri Tenant Help offers free, easy-to-use, and mobile-friendly resources to Missouri tenants facing eviction or other housing needs. Our DIY Forms are accessible to tenants, attorneys, paralegals, or anyone helping a tenant.

  Missouri Tenant Help is proudly funded by HUD (U.S. Department of Housing and Urban Development) and is supported by legal aid organizations across Missouri.

  The work that provided the basis for this publication was supported by funding under an award from the U.S. Department of Housing and Urban Development. The substance and findings of the work are dedicated to the public. The author and publisher are solely responsible for the accuracy of the statements and interpretations contained in this publication. Such interpretations do not necessarily reflect the views of the Government.

  ${ about_this_interview_version_info }
back button label: |
  Back to form
---
template: about_this_interview_version_info
content: |
  "${all_variables(special='metadata').get('title','').rstrip()}" version 
  `${ package_version_number }`; AssemblyLine version `${ al_version }`.

  % if interview_metadata.get("main_interview_key"):
    <%
      MAIN_METADATA = interview_metadata[interview_metadata["main_interview_key"]]
    %>
  % elif len(interview_metadata) > 1:    
    <% 
      del(interview_metadata["main_interview_key"]) # DADict creates the key on lookup above
      MAIN_METADATA = next(iter(interview_metadata.values())) 
    %>
  % else:
    <% MAIN_METADATA = {} %>
  % endif
  % if MAIN_METADATA.get("original_form") and not MAIN_METADATA.get("original_form").strip() == "None" and MAIN_METADATA.get("original_form").startswith("http"):
  [View the original version of this form](${ MAIN_METADATA.get("original_form") }).
  % endif
  
  % if package_updated_on:
  Last updated on ${ package_updated_on }. [:fab-fa-github: View code on GitHub](${ github_url }).  
  % endif

  % if all_variables(special='metadata').get('authors'):
  This form was authored by ${ comma_and_list(all_variables(special='metadata').get('authors')) }.
  % endif
  
  "${all_variables(special='metadata').get('title','').rstrip()}" includes code 
  from the [Document Assembly Line project](https://suffolklitlab.org/docassemble-AssemblyLine-documentation/docs/). 
---
id: who is using this interview
question: |
  Who is using this website?
fields:
  - I am: person_answering
    datatype: radio
    choices:
      - The tenant: tenant
      - An attorney: attorney
      - Someone **else** helping a tenant: tenant_helper
  - This is a right to counsel case for an MO legal aid program: is_right_to_counsel
    datatype: yesno
    show if:
      variable: person_answering
      is: attorney
  - Will you file an appearance?: representation_type
    input type: radio
    choices:
      - Yes. I am entering an appearance.: entering_appearance
      - No. I am only helping "ghostwrite" this document.: ghostwriting
    show if:
      variable: person_answering
      is: attorney
---
id: your name
question:  |
  % if person_answering == "tenant":
  Your name
  % else:
  Tenant's name
  % endif
fields:
  - First: users[0].name.first
  - Middle: users[0].name.middle
    required: False
  - Last: users[0].name.last
  - Suffix: users[0].name.suffix
    code: |
      name_suffix()
    required: False
---
id: name of the tenant attorney
sets:
  - users[0].attorney[0].name.first
  - users[0].attorney[0].name.last
  - users[0].attorney[0].name.middle
  - users[0].attorney[0].name.suffix
question: |
  Your name (as the attorney signing the {pleadings|pleading})
fields:
  - code: |
      users[0].attorney[0].name_fields()
---
sets:
  - users[0].attorney[0].address.address
  - users[0].attorney[0].address.city
  - users[0].attorney[0].address.zip
  - users[0].attorney[0].address.unit
  - users[0].attorney[0].address.state
  - users[0].attorney[0].address.country
id: tenants attorney address
generic object: ALIndividual
question: |
  What is your address for the {pleadings|pleading}?
fields:
  - code: |
      users[0].attorney[0].address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE)
---
id: other parties complete
code: |
  other_parties[i].name.first
  other_parties[i].person_type
  other_parties[i].attorney.gather()
  other_parties[i].complete = True
---
id: other parties attorney complete
code: |
  other_parties[i].attorney[j].name.first
  other_parties[i].attorney[j].complete = True
---
id: block limiting other parties attorney to 1
code: |
  other_parties[i].attorney.there_is_another = False
---
id: any other opposing parties
question: |
  Is there another Plaintiff in this eviction case?
subquestion:  |
  You have already told us about ${ other_parties.complete_elements() }.
  
  % if tenant_got_summons and petition_available:
    If you have the {Summons} and {Petition}, the name of each {Plaintiff} is listed
    in the box labeled "Plaintiff".
    
    [FILE ComplaintCaptionPlaintiff.png, 100%]
    
    ${ collapse_template(find_other_plaintiffs_template) }

  % else:
    You can find the name of each {Plaintiff} in the Parties and Attorneys tab 
    on Case.net.

    If Case.net lists "Doing business as" but not
    another plaintiff you can answer "no" to this question.
    
    ${ collapse_template(find_other_plaintiffs_template) }
  
  % endif
fields:
  - Is there another {Plaintiff}?: other_parties.there_is_another
    datatype: yesnomaybe
---
Template: find_other_plaintiffs_template
Subject: |
  % if tenant_got_summons and petition_available:
  How do I find out if there are other Plaintiffs on Case.net?
  % else:
  How do I find out if there are other Plaintiffs?
  % endif
Content: |
  If there is more than one plaintiff, they will be listed directly below the first plaintiff.
  
  If Case.net lists "Doing business as" but not another plaintiff like in the example below, you can answer "no" to this question.

  [FILE DocketDBAExample.png, 100%]

  ${ warn_picture_is_example_template }
---
id: Landlord representation
question: |
  Does ${ other_parties[i] } have an attorney?
subquestion: |
  % if tenant_got_summons and petition_available:
    If the landlord is represented by an attorney, then the attorney's name and address will be in the box next to the Landlord's name.
  
  [FILE MOSummonsPlaintiffAttorney.png, 100%]
  
  ${ collapse_template(find_plaintiff_attorney_representation_template) }
  
  % else:
    You can find out if the landlord is represented by an attorney in the Parties and Attorneys tab on Case.net.
  
    ${ collapse_template(find_plaintiff_attorney_representation_template) }
  
  % endif
fields:
  - Is ${ other_parties[i] } represented by an {attorney}?: other_parties[i].attorney.there_are_any
    datatype: yesnoradio
---
Template: find_plaintiff_attorney_representation_template
Subject: |
  % if tenant_got_summons and petition_available:
  How do I find out if ${ other_parties[i] } is represented by an attorney using Case.net?
  % else:
  How do I find out if ${ other_parties[i] } is represented by an attorney?
  % endif
Content: |
  If the landlord is represented by an attorney, then it will say "represented by" to the right of the landlord's name, and the attorney's name and address will be listed below.
  
  [FILE Parties.png, 100%]

  ${ warn_picture_is_example_template }
---
id: opposing attorney name
sets:
  - other_parties[i].attorney[j].name.first
  - other_parties[i].attorney[j].name.last
  - other_parties[i].attorney[j].name.middle
  - other_parties[i].attorney[j].name.suffix
question: |
  What is the name of ${ other_parties[i] }'s {attorney}?
subquestion: |
  % if tenant_got_summons and petition_available: 
  If the landlord is represented by an attorney, then the attorney's name and address will be in the box next to the Landlord's name.
  
  [FILE MOSummonsPlaintiffAttorney.png, 100%]

  ${ warn_picture_is_example_template }
  
  ${ collapse_template(find_plaintiff_attorney_name_template) }
  
  % else: 
  You can find the name and address of the attorney in the Parties and Attorneys tab on Case.net.
  
  ${ collapse_template(find_plaintiff_attorney_name_template) }
  
  % endif
fields:
  - code: |
      other_parties[i].attorney[j].name_fields()
---
Template: find_plaintiff_attorney_name_template
Subject: |
  % if tenant_got_summons and petition_available:
  How do I find the name of ${ other_parties[i] }'s attorney on Case.net?
  % else:
  How do I find the name of ${ other_parties[i] }'s attorney?
  % endif
Content: |
  If the landlord is represented by an attorney, then it will say "represented by" to the right of the landlord's name, and the attorney's name and address will be listed below.
  
  [FILE Parties.png, 100%]

  ${ warn_picture_is_example_template }

---
id: your address
sets:
  - users[0].address.address
  - users[0].address.city
  - users[0].address.zip
  - users[0].address.unit
  - users[0].address.state
  - users[0].address.country
question: |
  % if person_answering == "tenant":
  Where do you live?
  % else:
  Where does the tenant live?
  % endif
subquestion: |
  % if person_answering == "tenant":
  Write the **Missouri** address that you are being evicted from.
  % else:
  Write the **Missouri** address that the tenant is being evicted from.
  % endif
fields:
  - code: |
      users[0].address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE)
validation code: |
  if users[0].address.state != "MO":
    validation_error("Write an address that you are being evicted from in Missouri", field="users[0].address.state")
---
id: original hearing
question: |
  % if person_answering == "tenant":
  When is your court {hearing}?
  % else:
  When is the tenant's court {hearing}?
  % endif
subquestion: |
  % if tenant_got_summons and petition_available:
    % if person_answering == "tenant":
    The {Summons} will say the time and date of your original court hearing.
    % else:
    The {Summons} will say the time and date of the tenant's original court hearing.
    % endif
  
  [FILE MOSummonsHearingDate.png, 100%]
  
  ${ collapse_template(find_original_hearing_on_casenet_template) }
  
  % else:
    % if person_answering == "tenant":
    Using Case.net, you can find the time and date of your original court hearing on the "Scheduled Hearings and Trials" tab of your case.
    % else:
  Using Case.net, you can find the time and date of the tenant's original court hearing on the "Scheduled Hearings and Trials" tab of their case.
    % endif
    
    ${ collapse_template(find_original_hearing_on_casenet_template) }
    
  % endif
fields:
  - "Date of original hearing": original_hearing_date
    datatype: date
  - "Original hearing time": original_hearing_time
    datatype: radio
    choices: 
      - 9:00 AM
      - Other
    default: 9:00 AM
  - Time: other_time
    js show if: |
      val("original_hearing_time") == "Other"
---
question: Final Judgment or Hearing Date?
subquestion: |
  You said that the original hearing date has already happened.  What else happened?
fields: 
  - Has the court made a final judgment in this case?: final_judgment
    datatype: yesnomaybe
  - Date: judgment_date
    datatype: date
    max: ${ today() }
    show if: final_judgment
  - Has a trial date been scheduled?: trial_date_set
    datatype: yesnomaybe
    show if:
      variable: final_judgment
      is: False
  - What date is the trial date set for?: trial_date
    datatype: date
    show if: trial_date_set
---
template: find_original_hearing_on_casenet_template
subject: |
  % if tenant_got_summons and petition_available:
  
    % if person_answering == "tenant":
    How do I find the date and time of my original hearing on Case.net?
    % else:
    How do I find the date and time of the tenant's original hearing on Case.net?
    % endif
  
  % else:
  
    % if person_answering == "tenant":
    How do I find the date and time of my original hearing?
    % else:
    How do I find the date and time of the tenant's original hearing?
    % endif
    
  % endif
content: | 
  % if person_answering == "tenant":
    Your original hearing date can be found above the "Judge/Commissioner" information, while the time can be found just above the "Location" information.
    
    Your results may look like this:
  % else:
    The tenant's original hearing date can be found above the "Judge/Commissioner" information, while the time can be found just above the "Location" information.
    
    The tenant's results may look like this:
  % endif
    
  [FILE ScheduledEvents.png, 100%]

  ${ warn_picture_is_example_template }
---
id: any hearings
question: |
  % if person_answering == "tenant":
  Has the court held any hearings on your eviction yet?
  % else:
  Has the court held any hearings on the tenant's eviction yet?
  % endif
subquestion: |
  % if person_answering == "tenant":
  Click the "Docket Entries" tab to see what has happened in your case so far.

  The "Docket Entries" tab has a list of events. Each event has a date, a name,
  and a few facts about what happened.
  
  If the court has not had a hearing for your case yet, the "Docket Entries"
  tab will **only** show an event named "Summons Issued - Landlord/Tenant", like this:
  % else:
  Click the "Docket Entries" tab to see what has happened in the tenant's case so far.

  The "Docket Entries" tab has a list of events. Each event has a date, a name,
  and a few facts about what happened.
  
  If the court has not had a hearing for the tenant's case yet, the "Docket Entries"
  tab will **only** show an event named "Summons Issued - Landlord/Tenant", like this:
  % endif
  
  [FILE Docket.png, 100%]

  ${ warn_picture_is_example_template }
fields:
  - label: |
      % if person_answering == "tenant":
      Has the court already had a {hearing} on your case?
      % else:
      Has the court already had a {hearing} on the tenant's case?
      % endif
    field: past_hearings
    datatype: yesnomaybe
---
depends on: original_hearing_date
id: Calculating if hearing date is past
code: |
  original_hearing_date_past = original_hearing_date < today()
---
sets:
  - other_parties[i].name.first
  - other_parties[i].name.last
  - other_parties[i].name.middle
  - other_parties[i].name.suffix
  - other_parties[i].person_type
id: names of opposing parties - docket only
question: |
  % if i >= 1 and person_answering == "tenant":
  What is your ${ ordinal(i) } landlord's name?
  % elif i == 0 and person_answering == "tenant":
  What is your landlord's name?
  % elif i >= 1 and person_answering == "attorney" or person_answering == "tenant_helper":
  What is the tenant's ${ ordinal(i) } landlord's name?
  % elif i == 0 and person_answering == "attorney" or person_answering == "tenant_helper":
  What is the tenant's landlord's name?
  % endif
subquestion: |

    If the landlord's name isn't right, it might be a bit tricky for the court person to put your answer in the right spot, so it is best to find this information on Case.net. But, if you know the name they used on the court papers, you can just write it down without checking online.
    
    % if tenant_got_summons and petition_available:
    Look at the {Summons} and {Petition}, and write the name of the ${ ordinal(i) } "Plaintiff" exactly as it is written on the Summons and Petition.
    
    [FILE ComplaintCaptionPlaintiff.png, 100%]

    ${ collapse_template(find_landlord_name_on_casenet_template) }
    
    % else:
    
    ${ collapse_template(find_landlord_name_on_casenet_template) }
    
    % endif
    


fields:
  - label: |
      % if person_answering == "tenant":
      Is your landlord a person or a business?
      % else:
      Is the tenant's landlord a person or a business?
      % endif
    field: other_parties[i].person_type
    input type: radio
    choices:
      - Person: individual
      - Business: business
  - Landlord's first name: other_parties[i].name.first
    show if:
      variable: other_parties[i].person_type
      is: "individual"
  - Last name: other_parties[i].name.last
    show if:
      variable: other_parties[i].person_type      
      is: "individual"
  - Suffix: other_parties[i].name.suffix
    code: |
      name_suffix()
    show if:
      variable: other_parties[i].person_type      
      is: "individual"
    required: False      
  - Landlord's name: other_parties[i].name.first
    show if:
      variable: other_parties[i].person_type
      is: "business"
---
template: find_landlord_name_on_casenet_template
subject: |
  % if person_answering == "tenant":
    How do I find my landlord's name on Case.net?
  % else:
    How do I find the landlord's name on Case.net?
  % endif
content: | 
  % if i == 0:
    With your case open on [Case.net](https://www.courts.mo.gov/cnet), click the tab labeled "Parties & Attorneys." 
    It may look like this:
  
    [FILE Parties.png, 100%]

    ${ warn_picture_is_example_template }
    
    Your name should be listed next to the word "Defendant." The landlord's name should be listed next to the word "Plaintiff." The name may look different than it does on your lease.
    
    Who is listed as the first {Plaintiff}? If there is more than one Plaintiff, you can name them later.
    
  % else:
    Who is the ${ ordinal(i) } {Plaintiff} listed on this case?
  
    [FILE ComplaintCaptionPlaintiff.png, 100%]
  % endif
---
template: warn_picture_is_example_template
content: |
  <div class="alert alert-warning" role="alert">
    <i class="fas fa-exclamation-triangle"></i>
    <strong>Important</strong>: the picture above is just a sample. Make sure you are looking at the results on Missouri Case.net for your case.
  </div>
---
id: use case net for online docket
# not (tenant_got_summons and petition_available)
only sets: use_case_net_for_online_docket
continue button field: use_case_net_for_online_docket
question: |
  % if person_answering == "tenant":
  Use Case.net to lookup your case
  % else:
  Use Case.net to lookup the tenant's case
  % endif
subquestion: |
  % if not (tenant_got_summons and petition_available):
  You said you don't have the {Summons} and {Petition} with you. 
  % endif

  You can use [Case.net](https://www.courts.mo.gov/cnet)
  to help answer some questions on this website. You can check the landlord's name and other information, like the court date and the case number online.

  Case.net is a free website from the Missouri Court. You do not need an
  account for Case.net.

  Using Case.net is optional, but it can help you answer the questions more
  accurately.
  
  To use Case.net to answer questions in this interview, you need to:

  1. Click the button below to open a search page on Case.net with your address
     and court name filled in.
  1. Find your case name in the search results and open it.

  You will need both this website and the Case.net website open at the same time. You will
  need to switch back and forth between the two windows.

  Look for your eviction case in the search results. Click the link with the case number for your case to see the details about your case. If you do not see your case, try a different
  search.

  ${ action_button_html(formatted_casenet_url, label="Search Case.net in a new window", icon="up-right-from-square") }
---
comment: |
  This block is not used because of another block that sets docket number underneath.
sets: docket_number
id: docket number
question: |
  % if person_answering == "tenant":
  What is the case number for your case?
  % else: 
  What is the case number for the tenant's case?
  % endif
subquestion: |
  ${ collapse_template(find_case_number_docket_template) }
  
  ${ collapse_template(find_case_number_summons_template) }
fields:
  - label: |
      % if person_answering == "tenant":
      I do not know the case number
      % else:
      The tenant does not know the case number
      % endif
    field: dont_know_docket_number
    datatype: yesnowide
  - no label: docket_number
    hide if: dont_know_docket_number
  - note: |
      % if person_answering == "tenant":
      You will need to add the case number before you file the document.  You can finish this interview, but it is recommended that you find the {summons} or the online docket to add the case number.
      % else:
      The tenant will need to add the case number before the tenant files the document.  You can finish this interview, but it is recommended that you find the {summons} or the online docket to enter the case number now.
      % endif     
    show if: dont_know_docket_number
validation code: |
  # This should be safe to 
  if dont_know_docket_number:
    docket_number = ''      
---
template: find_case_number_docket_template
subject: |
  Where is the case number on Case.net?
content: |
  The case number is at of the top of the webpage, next to the names of the {Plaintiff} and {Defendant}.
  
  [FILE CaseHeaderNumber.png, 100%]

  ${ warn_picture_is_example_template }
---
template: find_case_number_summons_template
subject: |
  Where is the case number in the {summons}?
content: |
  The case number is at of the top of the webpage, next to the names of the {Plaintiff} and {Defendant}.
  
  [FILE MOSummonsNumber.png, 100%]

  ${ warn_picture_is_example_template }
---
###################### PETITION REVIEW ######################
id: Petition_introduction
question: |
  % if person_answering == "tenant":
  Did you get a Summons and Petition?
  % else:
  Did the tenant get a Summons and Petition?
  % endif
subquestion: |
  The Summons will look like this:
 
  [CENTER]
  [FILE MOSummons.png]
 
  The Petition looks different in some counties, but it may look like this:
 
  [CENTER]
  [FILE ComplaintForm.png]
fields:
  - label: |
      % if person_answering == "tenant":
      I got a copy of the {Summons} and {Petition}
      % else:
      Did the tenant get a copy of the {Summons} and {Petition}?
      % endif
    field: tenant_got_summons
    datatype: yesnomaybe
  - label: |
      % if person_answering == "tenant":
      How did you get the Summons and Petition?
      % else:
      How did the tenant get the Summons and Petition?
      % endif
    field: method_of_summons_service
    datatype: checkboxes
    choices:
      - ${ method_of_summons_service_text["mail"] }: mail
      - ${ method_of_summons_service_text["certified_mail"] }: certified_mail
      - ${ method_of_summons_service_text["posting"] }: posting
      - ${ method_of_summons_service_text["left"] }: left
      - ${ method_of_summons_service_text["sheriff"] }: sheriff
      - ${ method_of_summons_service_text["other_delivery"] }: other_delivery
      - "Some other method of getting the petition": other
    none of the above: False
    show if: tenant_got_summons
  - label: |
      % if person_answering == "tenant":
      Do you have the Summons next to you now?
      % else:
      Does the tenant have the Summons next to them now?
      % endif
    field: petition_available
    datatype: yesnoradio
    show if: tenant_got_summons
  - note: |
      % if person_answering == "tenant":
      **You may want to stop and get the Summons and Petition now.** It can help you answer
      the questions on this website more accurately. If you cannot easily get it,
      it is OK to keep going.
      % else: 
      **The tenant may want to stop and get the Summons and Petition now.** It can help them answer
      the questions on this website more accurately. If they cannot easily get it,
      it is OK to keep going.
      % endif
    show if: 
      variable: petition_available
      is: False
---
variable name: method_of_summons_service_text
use objects: True
data:
  mail:
    question: By regular mail
    document: By regular mail
  certified_mail:
    question: By certified mail
    document: By certified mail
  posting:
    question: |
      % if person_answering == "tenant":
      It was taped, stapled, or posted to my door or home\
      % else:
      It was taped, stapled, or posted to the tenant's door or home\
      % endif   
    document: |
      It was taped, stapled, or posted to the tenant's door or home   
  left:
    question: |
      It was stuffed in the door or left somewhere without being taped, stapled or posted  
    document: |
      It was stuffed in the door or left somewhere without being taped, stapled or posted
  sheriff:
    question: |
      % if person_answering == "tenant":
      It was handed to me by the sheriff or process server (called personal service)\
      % else:
      It was handed to the tenant by the sheriff or process server (called personal service)\
      % endif
    document: |
      It was handed to the tenant by the sheriff
  other_delivery:
    question: |
      % if person_answering == "tenant":
      It was handed to me by my landlord or somebody other than the sheriff or a process server\
      % else:
      It was handed to the tenant by the landlord or somebody other than the sheriff\
      % endif   
    document: |
      It was handed to the tenant by the landlord or somebody other than the sheriff
  other:
    question: >-
      Some other method of getting the petition
    document: >-
      Some other method of getting the petition
---
id: other tenants
question: |
  Is any other {tenant} listed on this eviction case?
subquestion: |
  In an eviction case, tenants are called Defendants. Defendants are listed underneath the {Plaintiff|Plaintiffs}.
  % if person_answering == "tenant":
  Your name and address should be included as a Defendant.
  % else:
  The tenant's name and address should be included as a Defendant.
  % endif
  % if tenant_got_summons and petition_available:
  
  [FILE ComplaintCaptionDefendant.png, 100%]
  
  % endif

  Sometimes a landlord will add "John Doe" or "Jane Doe" as a party.  You do not need to include these additional parties.
  
  ${ collapse_template(find_other_defendants_template) }
fields:
  - label: |
      % if person_answering == "tenant":
      Are there any other {Defendant|Defendants} listed besides you?
      % else:
      Are there any other {Defendant|Defendants} listed besides the tenant?
      % endif
    field: users.there_is_another
    datatype: yesnoradio
---
## update this screenshot with multiple defendants example
template: find_other_defendants_template
subject: |
  How do I find out if there are other Defendants on Case.net?
content: |
  % if person_answering == "tenant":
    Case.net will list any other Defendant's name directly below yours with the word "Defendent" next to it.
  % else:
    Case.net will list any other Defendant's name directly below the first tenant's name with the word "Defendent" next to it.
  % endif
  
  [FILE Parties.png, 100%]

  ${ warn_picture_is_example_template }
---
## add screenshot and Case.net example
id: petition_date 
question: |
  When did the {Plaintiff} {file} their {petition} in this case?
fields:
  - Date: petition_date
    datatype: date
---
generic object: ALIndividual
id: service method
question: |
  % if other_parties[0].attorney.there_are_any:
  % if person_answering == "tenant":
  ${ x } is represented by attorney ${ x.attorney }. When somebody is represented by an {attorney}, the attorney must be served.
  % else:
  ${ x } is represented by attorney ${ x.attorney }. When somebody is represented by an {attorney}, the attorney must be served.
  % endif
  % else:
  % if person_answering == "tenant":
  How will you get a copy of the documents to ${ x }?
  % else:
  How will the tenant get a copy of the documents to ${ x }?
  % endif
  % endif
fields:
  - label: |
      % if other_parties[0].attorney.there_are_any:
      % if person_answering == "tenant":
      I will serve ${ x.attorney } by
      % else:
      The tenant will serve ${ x.attorney } by
      % endif
      % else:
      % if person_answering == "tenant":
      I will serve ${ x } by
      % else:
      The tenant will serve ${ x } by
      % endif
      % endif
    field: x.service_method
    input type: radio
    code: al_service_methods
---
comment: |
  You can customize this block, and also add a translation for it with a language modifier,
  demonstrated below
variable name: al_service_methods
use objects: True
data:
  mail:
    question: Mail
    document: mail
  hand:
    question: Hand delivery
    document: hand delivery
  email:
    question: Email
    document: email
---
generic object: ALIndividual
id: any service address
question: |
  % if x.attorney.there_are_any:
  % if person_answering == "tenant":
  At what address will you serve ${ x.attorney }?
  % else:
  At what address will the tenant serve ${ x.attorney }?
  % endif
  % else:
  % if person_answering == "tenant":
  At what address will you serve ${ x }?
  % else:
  At what address will the tenant serve ${ x }?
  % endif
  % endif
fields:
  - ${ x.service_address.address_label }: x.service_address.address
    address autocomplete: True
  - ${ x.service_address.unit_label }: x.service_address.unit
    required: False
  - ${ x.service_address.city_label }: x.service_address.city
  - ${ x.service_address.state_label }: x.service_address.state
    code: |
      states_list(country_code=AL_DEFAULT_COUNTRY)
    default: ${ AL_DEFAULT_STATE }
  - ${ x.service_address.zip_label }: x.service_address.zip
    required: False      
  - ${ x.service_address.country_label }: x.service_address.country
    code: countries_list()
    default: ${ AL_DEFAULT_COUNTRY }
---
#if: x.attorney.there_are_any
#generic object: ALIndividual
#id: any service address - attorney
#question: |
#  % if person_answering == "tenant":
#  At what address will you serve ${ x.attorney }?
#  % else:
#  At what address will the tenant serve ${ x.attorney }?
#  % endif
#subquestion: |
#  ${ x } is represented by attorney ${ x.attorney }. When somebody is represented by an {attorney}, the attorney must be served.
#fields:
#  - ${ x.service_address.address_label }: x.service_address.address
#    address autocomplete: True
#    show if:
#      variable: x.service_address
#      is: None
#  - ${ x.service_address.unit_label }: x.service_address.unit
#    required: False
#    show if:
#      variable: x.service_address
#      is: None
#  - ${ x.service_address.city_label }: x.service_address.city
#    show if:
#      variable: x.service_address
#      is: None
#  - ${ x.service_address.state_label }: x.service_address.state
#    code: |
#      states_list(country_code=AL_DEFAULT_COUNTRY)
#    default: ${ AL_DEFAULT_STATE }
#    show if:
#      variable: x.service_address
#      is: None
#  - ${ x.service_address.zip_label }: x.service_address.zip
#    required: False      
#    show if:
#      variable: x.service_address
#      is: None
#  - ${ x.service_address.country_label }: x.service_address.country
#    code: countries_list()
#    default: ${ AL_DEFAULT_COUNTRY }
#    show if:
#      variable: x.service_address
#      is: None
---
generic object: ALIndividual
code: |
  if x.attorney.there_are_any:
    x.service_email = x.attorney[0].email
  else:
    x.service_email = x.email
---
depends on: judgment_date
id: Calculating if judgment_date is more then 30 days ago
code: |
  thirty_days_ago = current_datetime() - date_interval(days=30)
  
  if final_judgment:
    judgment_date_more_than_30 = judgment_date <= thirty_days_ago
  else: 
    judgment_date_more_than_30 = True
---
id: supporting_statement
question: |
  Why should the judge agree to cancel the earlier decision because of your request?
fields: 
  - Explain: supporting_statement 
    input type: area
---
objects: 
  - rental_address: ALAddress
---
id: rental address
question: |
  % if person_answering == "tenant":
  What is the address of your rental property?
  % else:
  What is the address of the tenant's rental property?
  % endif
fields:
  - Rental property address: rental_address
    datatype: object_radio
    default: 
      - users[0].address if defined(users[0].address.attr_name("address")) else None
    choices:
      - users[0].address if defined(users[0].address.attr_name("address")) else None
      - users[0].mailing_address if defined(users[0].mailing_address.attr_name("address")) else None
    object labeler: |
      lambda y: y.on_one_line()      
    none of the above: |
      Somewhere else   
  - Address: rental_address.address
    address autocomplete: True
    show if:
      variable: rental_address
      is: null
  - Unit: rental_address.unit
    required: False
    show if:
      variable: rental_address
      is: null
  - City: rental_address.city
    show if:
      variable: rental_address
      is: null
  - State: rental_address.state
    code: |
      states_list(country_code=AL_DEFAULT_COUNTRY)
    default: ${ AL_DEFAULT_STATE }
    show if:
      variable: rental_address
      is: null 
  - Zip: rental_address.zip
    required: False 
    show if:
      variable: rental_address
      is: null
---
## in future add resource for how they can find this information
## add screenshot and Case.net insructions
id: outcome
question: |
  What was the outcome of this eviction case?
fields:
  - The outcome of this eviction case was: eviction_outcome
    datatype: radio
    choices:
      - Default Judgment
      - Dismissal
---
id: reasons for motion
question: |
  % if person_answering == "tenant":
  Why do you need the court records secured?
  % else: 
  Why does the tenant need the court records secured?
  % endif
fields:
  - label: |
      % if person_answering == "tenant":
      Do any of the following reasons justify securing case records in your case?
      % else: 
      Do any of the following reasons justify securing case records in the plaintiff's case?
      % endif
    field: reason_for_elevated_security 
    datatype: checkboxes
    choices:
      - Eviction was improperly granted
      - Domestic violence
      - Other
    none of the above: false
  - Explain: reason_for_elevated_security_other
    input type: area
    rows: 5
    show if:
      variable: reason_for_elevated_security['Other']
      is: True
---
id: reasons for motion
question: |
  % if person_answering == "tenant":
  Have you already had to pay extra fees or been denied a place to live because of this case getting attention?
  % else: 
  Has the tenant already had to pay extra fees or been denied a place to live because of this case getting attention?
  % endif
fields:
  - label: |
      % if person_answering == "tenant":
      I am already experiencing the costs of this case getting attention
      % else: 
      The tenant is already experiencing the costs of this case getting attention
      % endif
    field: tenant_exposed_to_threats
    datatype: yesnoradio
---
id: future costs
question: |
  % if person_answering == "tenant":
  Do you think you will experience costs of this case getting attention in the future?
  % else: 
  Does the tenant think they will experience costs of this case getting attention in the future?
  % endif
fields:
  - label: |
      % if person_answering == "tenant":
      Do you believe other landlords will refuse to rent to you because the information about this case is public?
      % else: 
      Does the tenant believe other landlords will refuse to rent to them because the information about this case is public?
      % endif
    field: tenant_believes_landlords_wont_rent 
    datatype: yesnoradio
  - label: |
      % if person_answering == "tenant":
      Do you believe you will have to pay higher rent, or find a co-signer, or face other economic consequences if this case remains public?
      % else: 
      Does the tenant believe they will have to pay higher rent, or find a co-signer, or face other economic consequences if this case remains public?
      % endif
    field: economic_consequences
    datatype: yesnoradio
  - label: |
      % if person_answering == "tenant":
      Do you believe the public visibility of this eviction case will make it harder for you to rent housing?
      % else: 
      Does the tenant believe the public visibility of this eviction case will make it harder for the tenant to rent housing?
      % endif
    field: tenant_would_be_prejudiced
    datatype: yesnoradio
---
id: hearing date time
question: |
  % if person_answering == "tenant":
  When is your original {hearing} planned?
  % else: 
  When is the tenant's original {hearing} planned?
  % endif
fields:
  - Date: original_hearing_date
    datatype: date
  - Time: original_hearing_time
    datatype: radio
    choices: 
      - 9:00 AM
      - Other
    default: 9:00 AM
  - Other time: other_time
    js show if: |
      val("original_hearing_time") == "Other"
---
## add screenshot and Case.net example?
id: trial date 
question: |
  Has the court set a date for trial?
fields:
  - The court has set a date for trial: trial_date_set
    datatype: yesnoradio
---
id: answer and assert defenses 
question: |
  Do you want to assert {defense|defenses} at trial?
fields:
  - I want to assert defenses at trial: wishes_to_assert_affirmative_defenses
    datatype: yesnoradio
---
id: reasons_unable_to_prepare_exists
question: |
  Was there a reason you couldn't get your response ready and {file} it on time?
fields:
  - There is a reason: reasons_unable_to_prepare_exists
    datatype: yesnoradio
  - Explain: reason
    input type: area
    show if: reasons_unable_to_prepare_exists
---
## in future add link to discovery interview
id: discovery
question: |
  Discovery
subquestion: |
  You have the right to have your landlord answer some questions and give you some documents before trial. This is called "discovery."
  
  Discovery may help you understand what information or documents your landlord has.
fields:
  - Did you request discovery?: discovery_requested
    datatype: yesnoradio
  - Are you thinking about requesting discovery?: discovery_planned
    datatype: yesnoradio
    show if:
      variable: discovery_requested
      is: False
  - Did the landlord respond to your discovery requests?: discovery_produced
    datatype: yesnoradio
    show if:
      variable: discovery_requested
      is: True
  - When did the landlord respond to your discovery requests?: discovery_provided_date
    datatype: date
    show if:
      variable: discovery_produced
      is: True
  - Do you disagree with any reasons your landlord gave for not sharing information?: discovery_objections_planned
    datatype: yesnoradio
    show if:
      variable: discovery_produced
      is: True
---
id: trial_date
question: |
  % if person_answering == "tenant":
  When is your trial date planned?
  % else: 
  When is the tenant's trial date planned?
  % endif
fields:
  - Date: trial_date
    datatype: ThreePartsDate
    alMin: ${ today() }
  - Time: trial_time
---
id: date_counsel_retained
question: |
  % if person_answering == "tenant":
  Did you get a lawyer for this case?
  % else: 
  Did the tenant get a lawyer for this case?
  % endif
fields:
  - no label: counsel_retained
    datatype: yesnoradio
  - label: |
      % if person_answering == "tenant":
      When did you get a lawyer for this case?
      % else: 
      When did the tenant get a lawyer for this case?
      % endif
    field: date_counsel_retained
    datatype: ThreePartsDate
    alMax: ${ today() }
    show if: counsel_retained
---
id: no_dilatory_motive
question: |
  % if person_answering == "tenant":
  Do you have any unfair reasons for making this request?
  % else:
  Does the tenant have any unfair reasons for making this request?
  % endif
fields:
  - label: |
      % if person_answering == "tenant":
      Do you have a reason for making the time shorter that might not seem fair?
      % else: 
      Does the tenant have a reason for making the time shorter that might not seem fair?
      % endif
    field: unfair_motive 
    datatype: yesnoradio
  - label: |
      % if person_answering == "tenant":
      Did you have enough time to ask questions or disagree with the Plaintiff's petition?
      % else: 
      Did the tenant have enough time to ask questions or disagree with the Plaintiff's petition?
      % endif
    field: enough_time 
    datatype: yesnoradio
---
code: |
  if not unfair_motive and not enough_time: 
    no_dilatory_motive = True
  else:
    no_dilatory_motive = False
---
id: may_resolve_case_more_efficiently
question: |
  % if person_answering == "tenant":
  Could this case be solved faster if the judge approves your request?
  % else: 
  Could this case be solved faster if the judge approves the tenant's request?
  % endif
fields:
  - label: |
      % if person_answering == "tenant":
      This case could be solved faster if the judge approves my request
      % else: 
      This case could be solved faster if the judge approves the tenant's request
      % endif
    field: may_resolve_case_more_efficiently
    datatype: yesnoradio
---
id: opposing_party_consent_to_motion_to_elevate_security
question: |
  Does ${ other_parties } consent to this Motion to Elevate Security?
fields:
  - Does ${ other_parties } consent to this Motion?: opposing_party_consent_to_motion_to_elevate_security
    datatype: yesnoradio
---
id: opposing_party_consent_to_motion_for_leave_to_file
question: |
  Does ${ other_parties } consent to this Motion for Leave to File Responsive Pleadings?
fields:
  - Does ${ other_parties } consent to this Motion?: opposing_party_consent_to_motion_for_leave_to_file
    datatype: yesnoradio
---
id: opposing_party_consent_to_motion_to_shorten_time
question: |
  Does ${ other_parties } consent to this Motion to Shorten Time?
fields:
  - Does ${ other_parties } consent to this Motion?: opposing_party_consent_to_motion_to_shorten_time
    datatype: yesnoradio
---
code: |
  before_trial = date_difference(starting=date_counsel_retained,ending=trial_date)
  if before_trial.days == 0:
    days_before_trial = "the same day as"
  elif before_trial.days == 1:
    days_before_trial = "the day prior to"
  else:
    days_before_trial = nice_number(before_trial.days) + " days prior to"
---
id: new hearing date time
question: When is the new {hearing}?
fields:
  - Date: new_hearing_date
    datatype: ThreePartsDate
    alMin: ${ today() }
  - "New hearing time": new_hearing_time
    datatype: radio
    choices: 
      - 9:00 AM
      - Other
    default: 9:00 AM
  - Other time: new_other_time
    js show if: |
      val("new_hearing_time") == "Other"
---
code: |
  motions_attached = list()
  for motion in motion_list.true_values():
    if not motion == "motion_to_shorten_time":
      motions_attached.append(motion_list[motion])
---
code: |
  motions_for_hearing = list()
  for motion in motion_list.true_values():
    if not motion == "notice_of_hearing":
      motions_for_hearing.append(motion_checkboxes[motion])
---


attachment:
  - name: eviction motion to continue post interview instructions
    filename: Post-interview-instructions     
    variable name: eviction_defender_post_interview_instructions[i]        
    skip undefined: True
    docx template file: eviction_helper_next_steps.docx
---
attachment:
  - name: eviction motion to continue attachment
    filename: eviction_motion_to_continue.docx     
    variable name: eviction_motion_to_continue_attachment[i]       
    skip undefined: True
    docx template file: motion_to_continue.docx
---
attachment:
  - name: eviction answer
    filename: answer_defenses.docx     
    variable name: eviction_answer_attachment[i]        
    skip undefined: True
    docx template file: answer_defenses.docx
---
attachment:
  - name: motion for leave to file
    filename: motion_for_leave_to_file.docx     
    variable name: eviction_motion_for_leave_attachment[i]        
    skip undefined: True
    docx template file: motion_for_leave_to_file.docx
---
attachment:
  - name: discovery
    filename: Discovery.docx     
    variable name: eviction_discovery_attachment[i]        
    skip undefined: True
    docx template file: Discovery.docx
---
attachment:
  - name: motion to shorten time
    filename: motion_to_shorten_time.docx     
    variable name: motion_to_shorten_time_attachment[i]        
    skip undefined: True
    docx template file: motion_to_shorten_time.docx
---
attachment:
  - name: notice of hearing
    filename: notice_of_hearing.docx     
    variable name: notice_of_hearing_attachment[i]       
    skip undefined: True
    docx template file: notice_of_hearing.docx
---
attachment:
  - name: motion to dismiss
    filename: motion_to_dismiss  
    variable name: motion_to_dismiss_attachment[i]        
    skip undefined: True
    docx template file: motion_to_dismiss.docx
---
attachment:
  - name: motion to set aside
    filename: motion_to_set_aside
    variable name: motion_to_set_aside_attachment[i]        
    skip undefined: True
    docx template file: motion_to_set_aside.docx
---
id: preview eviction_defender
question: |
  % if person_answering == "tenant":
  Preview your form before you sign it
  % else:
  Preview the form before signing
  % endif
subquestion: |
  % if person_answering == "tenant":
  Here is a preview of the form you will sign on the next page.
  % else:
  Here is a preview of the form to be signed on the next page.
  % endif
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_eviction_answer'), label='Edit answers', color='info') }
  
  % if person_answering == "tenant":
  Remember to come back to this window to continue and sign your form.
  % else:
  Remember to come back to this window to continue and sign the form.
  % endif
continue button field: eviction_defender_preview_question    
---
code: |
  signature_fields = []
---
code: |
  # This is a placeholder for the addresses that will be searched
  # for matching address to court. Edit if court venue is based on 
  # a different address than the user's
  addresses_to_search = [user.address for user in users]
---
include:
  - review.yml
---
id: download eviction_defender
event: eviction_defender_download
question: |
  Download, print, deliver, and file the forms
subquestion: |
  Thank you, ${users}. The forms are ready to download, print, deliver, and file.
  
  **1. View and download the forms below.** Click the "Edit answers" button to fix any mistakes.
  
  **2. Print the forms.** You may be able to use a printer at a public library or the county law library.
  
  **3. Deliver the forms to:**
  
  % if other_parties[0].attorney.there_are_any: 
  Plaintiff's attorney: ${ other_parties[0].attorney[0].name }
  
  % else:
  Plaintiff: ${ other_parties[0].name }
  
  % endif
  % if other_parties[0].service_method == "email":
  Email: ${ other_parties[0].service_email }
  % else:
  ${ other_parties[0].service_address.block() }
  % endif
  
  **4. Complete and {file} the forms:**
  
    * Fill in the date you deliver each form to the other party in the "Certificate of Service" box usually at the end of the document. There are 3 Certificate of Service boxes in the discovery document that you will need to fill in before delivering to the other party. 
    
    % if not docket_number: 
    * Add the case number.
    
    % endif
    * Go to the court and file the forms at the clerk's office.

      ${ trial_court.building_name }
      
      ${ trial_court.address.on_one_line() }
      
      % if trial_court.schedule is not None:
      ${ trial_court.schedule }
      % endif
  
  ###Deadline to deliver and file the forms###
  
  Deliver and file these forms **as soon as possible**. 
  % if original_hearing_date_past: 
  The original hearing date on ${ original_hearing_date } was the deadline to file the answer. Ask the court for more time to file the answer by delivering and filing the **Motion for Leave to File Responsive Pleadings**.
  % else:
  The forms must be delivered and filed by **${ original_hearing_date }**. Bring copies with you to court for the hearing.
  % endif

  ${ action_button_html(url_action('review_eviction_answer'), label='Edit answers', color='info') }
    
  % if device().is_mobile:
  ${ al_user_bundle.download_list_html(format="pdf") }
  % else:
  ${ al_user_bundle.download_list_html(format="docx") }
  % endif
 
  ${ al_user_bundle.send_button_html(show_editable_checkbox=True) }

  ${ only_once_review_widget() }
  
progress: 100
---
objects:
  - eviction_defender_post_interview_instructions: ALDocument.using(title="Instructions", filename="eviction_helper_next_steps.docx", enabled=True, has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - eviction_motion_to_continue_attachment: ALDocument.using(title="Postpone your eviction hearing", filename="eviction_motion_to_continue.docx", has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - eviction_answer_attachment: ALDocument.using(title="Answer and Affirmative Defenses", filename="answer_defenses.docx", has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - eviction_motion_for_leave_attachment: ALDocument.using(title="Motion for Leave to File Responsive Pleadings", filename="motion_for_leave_to_file.docx", has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - eviction_discovery_attachment: ALDocument.using(title="Discovery", filename="Discovery.docx", has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - motion_to_shorten_time_attachment: ALDocument.using(title="File a Motion to Shorten Time", filename="motion_to_shorten_time.docx", has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - motion_to_dismiss_attachment: ALDocument.using(title="File a Motion to Dismiss", filename="motion_to_dismiss.docx", has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - notice_of_hearing_attachment: ALDocument.using(title="File a Notice of Hearing", filename="notice_of_hearing.docx", has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - motion_to_set_aside_attachment: ALDocument.using(title="File a Motion to Set Aside Judgment", filename="motion_to_set_aside.docx", has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[eviction_defender_post_interview_instructions,eviction_motion_to_continue_attachment,eviction_answer_attachment,eviction_motion_for_leave_attachment,motion_to_shorten_time_attachment,eviction_discovery_attachment,motion_to_dismiss_attachment,motion_to_set_aside_attachment,notice_of_hearing_attachment], filename="eviction_helper.docx_package.pdf", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=attachment_list_court, filename="eviction_helper.docx_package.pdf", title="All forms to download for your records", enabled=True)
---
template: about_page_contents
subject: Terms of Use and Privacy Policy
content: |
  This website is free to use. Legal Services of Eastern Missouri (“LSEM”), a nonprofit legal aid program, hosts the site.
  <h3 class="h5">You need to know</h3>
  * **This website does not provide legal advice**. If you need legal advice, you can use [https://www.lsmo.org/](https://www.lsmo.org/) to find a lawyer.
  * The information and documents on this website have no warranty. We provide the information “as-is.” By using the site, you agree not to hold LSEM or the information providers on this site liable.
  * We work hard to keep the information on the site up to date. Lawyers drafted and reviewed the documents this site uses. But laws and local rules change over time. These changes can make a document unenforceable when you use it.
  * We do our best to keep the site working! To do that, we allow you to submit feedback so we can track problems on the site. But we cannot provide individual technical support.
  <h3 class="h5">To use this site</h3>
  * You need to be over 13 to use this site.
  * This site is for **anyone** 13 and over. For example: you can be the person who needs the help, a lawyer, or a social worker.
  * You may not sell the information or the contents of this site. But you can charge for your own time.
  * Please keep your use fair. Do not use this site in a way that is illegal or that makes it harder for other people to use.
  <h3 class="h5">Information we and others collect</h3>
  * We collect the information that you type to help you complete your forms. We delete all information 180 days after you last update it. You can also delete information immediately.
  * We log information including IP addresses and web browsers from all visitors. We use this information to keep our site secure. We keep logs for up to 180 days.
  * We use Google Maps to help fill in addresses automatically. This feature sends your IP address to Google Maps to get your approximate location.
  * We use Google Analytics to learn how people use our website. This helps us understand which pages are hardest to use. Google may use this information to show you better advertisements.
  * We use email and text message delivery services that may keep their own records of any messages you send. If you choose to log in with your phone number, this may include a record of the times you log in to the site.
  <h3 class="h5">We keep your information safe</h3>
  * We use the same technology that banks and online stores use to keep your information safe. We use:
  * 256 bit encryption
  * Software firewalls
  * Limited access controls
  * Continual monitoring
  * Regular security updates
  <h3 class="h5">Sharing your information</h3>
  * We never sell your information.
  * We share anonymous information with a small number of nonprofits and researchers. We use the information to improve our site and to improve free legal help in Missouri.
  * When you visit some pages of the site, the site may ask if you want to apply to get a free lawyer from legal aid. You get to decide if you want to share your personal information.
  * You may choose to email completed forms or share a link to your in-progress work at any time to any person.
  <h3 class="h5">These terms of use can change</h3>
  We may change these Terms of Use at any time with no notice. Please review the terms on a regular basis to see any changes.
  If you use the site after we make changes, you accept our changed Terms of Use.
  <h3 class="h5">The laws of Missouri apply to these Terms of Use</h3>
  If a judge decides that one of the terms in this Terms of Use is unenforceable, it will not change the terms that remain.
  <h3 class="h5">If you still have questions</h3>
  Send any questions to:
  Legal Services of Eastern Missouri
  701 Market Street, Suite 1100
  St. Louis, MO 63101
---
id: signpost service of process
decoration: clipboard-check
question: |
  You are almost done!
subquestion: |
  The last few questions are about getting a copy
  of the documents to the landlord.
continue button field: signpost_service_of_process
---
template: collapsible_info_template
subject: Click here to see more information
content: |
  You can find more information or definitions by clicking on these links.
---